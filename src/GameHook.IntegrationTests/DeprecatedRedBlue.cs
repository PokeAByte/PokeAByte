using Microsoft.Extensions.Logging;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using OpenAPI.GameHook;
using System.Threading.Tasks;

namespace GameHook.IntegrationTests
{
    [TestClass]
    public class Deprecated_Pokemon_RedBlue : BaseTest
    {

        [TestMethod]
        public async Task All_Properties()
        {
            await Load_GB_PokemonRedDeprecated(6);

            var mapper = await GameHookClient.GetMapperAsync();

            mapper.AssertAreEqual("player.name", 0xD158, [128, 128, 128, 128, 128, 128, 128, 80, 0, 0, 0], "AAAAAAA");
            mapper.AssertAreEqual("player.playerId", 0xD359, [44, 131], 11395);
            mapper.AssertAreEqual("player.teamCount", 0xD163, [1], 1);
            mapper.AssertAreEqual("player.team.0.nickname", 0xD2B5, [128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 80], "AAAAAAAAAA");
            mapper.AssertAreEqual("player.team.0.species", 0xD16B, [176], "Charmander");
            mapper.AssertAreEqual("player.team.0.pokedexNumber", 0xD16B, [176], "4");
            mapper.AssertAreEqual("player.team.0.level", 0xD18C, [8], 8);
            mapper.AssertAreEqual("player.team.0.expPoints", 0xD179, [0, 1, 144], 400);
            mapper.AssertAreEqual("player.team.0.statusCondition", 0xD16F, [0], " ");
            mapper.AssertAreEqual("player.team.0.maxHp", 0xD18D, [0, 25], 25);
            mapper.AssertAreEqual("player.team.0.hp", 0xD16C, [0, 7], 7);
            mapper.AssertAreEqual("player.team.0.attack", 0xD18F, [0, 13], 13);
            mapper.AssertAreEqual("player.team.0.defense", 0xD191, [0, 14], 14);
            mapper.AssertAreEqual("player.team.0.speed", 0xD193, [0, 17], 17);
            mapper.AssertAreEqual("player.team.0.special", 0xD195, [0, 15], 15);
            mapper.AssertAreEqual("player.team.0.dvAttack", 0xD186, [28], 1);
            mapper.AssertAreEqual("player.team.0.dvDefense", 0xD186, [28], 12);
            mapper.AssertAreEqual("player.team.0.dvSpeed", 0xD187, [239], 14);
            mapper.AssertAreEqual("player.team.0.dvSpecial", 0xD187, [239], 15);
            mapper.AssertAreEqual("player.team.0.move1", 0xD173, [10], "SCRATCH");
            mapper.AssertAreEqual("player.team.0.move2", 0xD174, [45], "GROWL");
            mapper.AssertAreEqual("player.team.0.move3", 0xD175, [0], null);
            mapper.AssertAreEqual("player.team.0.move4", 0xD176, [0], null);
            mapper.AssertAreEqual("player.team.0.move1pp", 0xD188, [26], 26);
            mapper.AssertAreEqual("player.team.0.move2pp", 0xD189, [40], 40);
            mapper.AssertAreEqual("player.team.0.move3pp", 0xD18A, [0], 0);
            mapper.AssertAreEqual("player.team.0.move4pp", 0xD18B, [0], 0);
            mapper.AssertAreEqual("player.team.0.move1ppUp", 0xD188, [26], 0);
            mapper.AssertAreEqual("player.team.0.move2ppUp", 0xD189, [40], 0);
            mapper.AssertAreEqual("player.team.0.move3ppUp", 0xD18A, [0], 0);
            mapper.AssertAreEqual("player.team.0.move4ppUp", 0xD18B, [0], 0);
            mapper.AssertAreEqual("player.team.0.statExpHp", 0xD17C, [0, 239], 239);
            mapper.AssertAreEqual("player.team.0.statExpAttack", 0xD17E, [1, 3], 259);
            mapper.AssertAreEqual("player.team.0.statExpDefense", 0xD180, [0, 245], 245);
            mapper.AssertAreEqual("player.team.0.statExpSpeed", 0xD182, [1, 66], 322);
            mapper.AssertAreEqual("player.team.0.statExpSpecial", 0xD184, [0, 185], 185);
            mapper.AssertAreEqual("player.team.0.type1", 0xD170, [20], "Fire");
            mapper.AssertAreEqual("player.team.0.type2", 0xD171, [20], "Fire");
            mapper.AssertAreEqual("player.team.0.trainerId", 0xD177, [44, 131], 11395);
            mapper.AssertAreEqual("player.team.0.catchRate", 0xD172, [45], 45);
            mapper.AssertAreEqual("player.team.1.nickname", 0xD2C0, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("player.team.1.species", 0xD197, [0], null);
            mapper.AssertAreEqual("player.team.1.pokedexNumber", 0xD197, [0], null);
            mapper.AssertAreEqual("player.team.1.level", 0xD1B8, [0], 0);
            mapper.AssertAreEqual("player.team.1.expPoints", 0xD1A5, [0, 0, 0], 0);
            mapper.AssertAreEqual("player.team.1.statusCondition", 0xD19B, [0], " ");
            mapper.AssertAreEqual("player.team.1.maxHp", 0xD1B9, [0, 0], 0);
            mapper.AssertAreEqual("player.team.1.hp", 0xD198, [0, 0], 0);
            mapper.AssertAreEqual("player.team.1.attack", 0xD1BB, [0, 0], 0);
            mapper.AssertAreEqual("player.team.1.defense", 0xD1BD, [0, 0], 0);
            mapper.AssertAreEqual("player.team.1.speed", 0xD1BF, [0, 0], 0);
            mapper.AssertAreEqual("player.team.1.special", 0xD1C1, [0, 0], 0);
            mapper.AssertAreEqual("player.team.1.dvAttack", 0xD1B2, [0], 0);
            mapper.AssertAreEqual("player.team.1.dvDefense", 0xD1B2, [0], 0);
            mapper.AssertAreEqual("player.team.1.dvSpeed", 0xD1B3, [0], 0);
            mapper.AssertAreEqual("player.team.1.dvSpecial", 0xD1B3, [0], 0);
            mapper.AssertAreEqual("player.team.1.move1", 0xD19F, [0], null);
            mapper.AssertAreEqual("player.team.1.move2", 0xD1A0, [0], null);
            mapper.AssertAreEqual("player.team.1.move3", 0xD1A1, [0], null);
            mapper.AssertAreEqual("player.team.1.move4", 0xD1A2, [0], null);
            mapper.AssertAreEqual("player.team.1.move1pp", 0xD1B4, [0], 0);
            mapper.AssertAreEqual("player.team.1.move2pp", 0xD1B5, [0], 0);
            mapper.AssertAreEqual("player.team.1.move3pp", 0xD1B6, [0], 0);
            mapper.AssertAreEqual("player.team.1.move4pp", 0xD1B7, [0], 0);
            mapper.AssertAreEqual("player.team.1.move1ppUp", 0xD1B4, [0], 0);
            mapper.AssertAreEqual("player.team.1.move2ppUp", 0xD1B5, [0], 0);
            mapper.AssertAreEqual("player.team.1.move3ppUp", 0xD1B6, [0], 0);
            mapper.AssertAreEqual("player.team.1.move4ppUp", 0xD1B7, [0], 0);
            mapper.AssertAreEqual("player.team.1.statExpHp", 0xD1A8, [0, 0], 0);
            mapper.AssertAreEqual("player.team.1.statExpAttack", 0xD1AA, [0, 0], 0);
            mapper.AssertAreEqual("player.team.1.statExpDefense", 0xD1AC, [0, 0], 0);
            mapper.AssertAreEqual("player.team.1.statExpSpeed", 0xD1AE, [0, 0], 0);
            mapper.AssertAreEqual("player.team.1.statExpSpecial", 0xD1B0, [0, 0], 0);
            mapper.AssertAreEqual("player.team.1.type1", 0xD19C, [0], "Normal");
            mapper.AssertAreEqual("player.team.1.type2", 0xD19D, [0], "Normal");
            mapper.AssertAreEqual("player.team.1.trainerId", 0xD1A3, [0, 0], 0);
            mapper.AssertAreEqual("player.team.1.catchRate", 0xD19E, [0], 0);
            mapper.AssertAreEqual("player.team.2.nickname", 0xD2CB, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("player.team.2.species", 0xD1C3, [0], null);
            mapper.AssertAreEqual("player.team.2.pokedexNumber", 0xD1C3, [0], null);
            mapper.AssertAreEqual("player.team.2.level", 0xD1E4, [0], 0);
            mapper.AssertAreEqual("player.team.2.expPoints", 0xD1D1, [0, 0, 0], 0);
            mapper.AssertAreEqual("player.team.2.statusCondition", 0xD1C7, [0], " ");
            mapper.AssertAreEqual("player.team.2.maxHp", 0xD1E5, [0, 0], 0);
            mapper.AssertAreEqual("player.team.2.hp", 0xD1C4, [0, 0], 0);
            mapper.AssertAreEqual("player.team.2.attack", 0xD1E7, [0, 0], 0);
            mapper.AssertAreEqual("player.team.2.defense", 0xD1E9, [0, 0], 0);
            mapper.AssertAreEqual("player.team.2.speed", 0xD1EB, [0, 0], 0);
            mapper.AssertAreEqual("player.team.2.special", 0xD1ED, [0, 0], 0);
            mapper.AssertAreEqual("player.team.2.dvAttack", 0xD1DE, [0], 0);
            mapper.AssertAreEqual("player.team.2.dvDefense", 0xD1DE, [0], 0);
            mapper.AssertAreEqual("player.team.2.dvSpeed", 0xD1DF, [0], 0);
            mapper.AssertAreEqual("player.team.2.dvSpecial", 0xD1DF, [0], 0);
            mapper.AssertAreEqual("player.team.2.move1", 0xD1CB, [0], null);
            mapper.AssertAreEqual("player.team.2.move2", 0xD1CC, [0], null);
            mapper.AssertAreEqual("player.team.2.move3", 0xD1CD, [0], null);
            mapper.AssertAreEqual("player.team.2.move4", 0xD1CE, [0], null);
            mapper.AssertAreEqual("player.team.2.move1pp", 0xD1E0, [0], 0);
            mapper.AssertAreEqual("player.team.2.move2pp", 0xD1E1, [0], 0);
            mapper.AssertAreEqual("player.team.2.move3pp", 0xD1E2, [0], 0);
            mapper.AssertAreEqual("player.team.2.move4pp", 0xD1E3, [0], 0);
            mapper.AssertAreEqual("player.team.2.move1ppUp", 0xD1E0, [0], 0);
            mapper.AssertAreEqual("player.team.2.move2ppUp", 0xD1E1, [0], 0);
            mapper.AssertAreEqual("player.team.2.move3ppUp", 0xD1E2, [0], 0);
            mapper.AssertAreEqual("player.team.2.move4ppUp", 0xD1E3, [0], 0);
            mapper.AssertAreEqual("player.team.2.statExpHp", 0xD1D4, [0, 0], 0);
            mapper.AssertAreEqual("player.team.2.statExpAttack", 0xD1D6, [0, 0], 0);
            mapper.AssertAreEqual("player.team.2.statExpDefense", 0xD1D8, [0, 0], 0);
            mapper.AssertAreEqual("player.team.2.statExpSpeed", 0xD1DA, [0, 0], 0);
            mapper.AssertAreEqual("player.team.2.statExpSpecial", 0xD1DC, [0, 0], 0);
            mapper.AssertAreEqual("player.team.2.type1", 0xD1C8, [0], "Normal");
            mapper.AssertAreEqual("player.team.2.type2", 0xD1C9, [0], "Normal");
            mapper.AssertAreEqual("player.team.2.trainerId", 0xD1CF, [0, 0], 0);
            mapper.AssertAreEqual("player.team.2.catchRate", 0xD1CA, [0], 0);
            mapper.AssertAreEqual("player.team.3.nickname", 0xD2D6, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("player.team.3.species", 0xD1EF, [0], null);
            mapper.AssertAreEqual("player.team.3.pokedexNumber", 0xD1EF, [0], null);
            mapper.AssertAreEqual("player.team.3.level", 0xD210, [0], 0);
            mapper.AssertAreEqual("player.team.3.expPoints", 0xD1FD, [0, 0, 0], 0);
            mapper.AssertAreEqual("player.team.3.statusCondition", 0xD1F3, [0], " ");
            mapper.AssertAreEqual("player.team.3.maxHp", 0xD211, [0, 0], 0);
            mapper.AssertAreEqual("player.team.3.hp", 0xD1F0, [0, 0], 0);
            mapper.AssertAreEqual("player.team.3.attack", 0xD213, [0, 0], 0);
            mapper.AssertAreEqual("player.team.3.defense", 0xD215, [0, 0], 0);
            mapper.AssertAreEqual("player.team.3.speed", 0xD217, [0, 0], 0);
            mapper.AssertAreEqual("player.team.3.special", 0xD219, [0, 0], 0);
            mapper.AssertAreEqual("player.team.3.dvAttack", 0xD20A, [0], 0);
            mapper.AssertAreEqual("player.team.3.dvDefense", 0xD20A, [0], 0);
            mapper.AssertAreEqual("player.team.3.dvSpeed", 0xD20B, [0], 0);
            mapper.AssertAreEqual("player.team.3.dvSpecial", 0xD20B, [0], 0);
            mapper.AssertAreEqual("player.team.3.move1", 0xD1F7, [0], null);
            mapper.AssertAreEqual("player.team.3.move2", 0xD1F8, [0], null);
            mapper.AssertAreEqual("player.team.3.move3", 0xD1F9, [0], null);
            mapper.AssertAreEqual("player.team.3.move4", 0xD1FA, [0], null);
            mapper.AssertAreEqual("player.team.3.move1pp", 0xD20C, [0], 0);
            mapper.AssertAreEqual("player.team.3.move2pp", 0xD20D, [0], 0);
            mapper.AssertAreEqual("player.team.3.move3pp", 0xD20E, [0], 0);
            mapper.AssertAreEqual("player.team.3.move4pp", 0xD20F, [0], 0);
            mapper.AssertAreEqual("player.team.3.move1ppUp", 0xD20C, [0], 0);
            mapper.AssertAreEqual("player.team.3.move2ppUp", 0xD20D, [0], 0);
            mapper.AssertAreEqual("player.team.3.move3ppUp", 0xD20E, [0], 0);
            mapper.AssertAreEqual("player.team.3.move4ppUp", 0xD20F, [0], 0);
            mapper.AssertAreEqual("player.team.3.statExpHp", 0xD200, [0, 0], 0);
            mapper.AssertAreEqual("player.team.3.statExpAttack", 0xD202, [0, 0], 0);
            mapper.AssertAreEqual("player.team.3.statExpDefense", 0xD204, [0, 0], 0);
            mapper.AssertAreEqual("player.team.3.statExpSpeed", 0xD206, [0, 0], 0);
            mapper.AssertAreEqual("player.team.3.statExpSpecial", 0xD208, [0, 0], 0);
            mapper.AssertAreEqual("player.team.3.type1", 0xD1F4, [0], "Normal");
            mapper.AssertAreEqual("player.team.3.type2", 0xD1F5, [0], "Normal");
            mapper.AssertAreEqual("player.team.3.trainerId", 0xD1FB, [0, 0], 0);
            mapper.AssertAreEqual("player.team.3.catchRate", 0xD1F6, [0], 0);
            mapper.AssertAreEqual("player.team.4.nickname", 0xD2E1, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("player.team.4.species", 0xD21B, [0], null);
            mapper.AssertAreEqual("player.team.4.pokedexNumber", 0xD21B, [0], null);
            mapper.AssertAreEqual("player.team.4.level", 0xD23C, [0], 0);
            mapper.AssertAreEqual("player.team.4.expPoints", 0xD229, [0, 0, 0], 0);
            mapper.AssertAreEqual("player.team.4.statusCondition", 0xD21F, [0], " ");
            mapper.AssertAreEqual("player.team.4.maxHp", 0xD23D, [0, 0], 0);
            mapper.AssertAreEqual("player.team.4.hp", 0xD21C, [0, 0], 0);
            mapper.AssertAreEqual("player.team.4.attack", 0xD23F, [0, 0], 0);
            mapper.AssertAreEqual("player.team.4.defense", 0xD241, [0, 0], 0);
            mapper.AssertAreEqual("player.team.4.speed", 0xD243, [0, 0], 0);
            mapper.AssertAreEqual("player.team.4.special", 0xD245, [0, 0], 0);
            mapper.AssertAreEqual("player.team.4.dvAttack", 0xD236, [0], 0);
            mapper.AssertAreEqual("player.team.4.dvDefense", 0xD236, [0], 0);
            mapper.AssertAreEqual("player.team.4.dvSpeed", 0xD237, [0], 0);
            mapper.AssertAreEqual("player.team.4.dvSpecial", 0xD237, [0], 0);
            mapper.AssertAreEqual("player.team.4.move1", 0xD223, [0], null);
            mapper.AssertAreEqual("player.team.4.move2", 0xD224, [0], null);
            mapper.AssertAreEqual("player.team.4.move3", 0xD225, [0], null);
            mapper.AssertAreEqual("player.team.4.move4", 0xD226, [0], null);
            mapper.AssertAreEqual("player.team.4.move1pp", 0xD238, [0], 0);
            mapper.AssertAreEqual("player.team.4.move2pp", 0xD239, [0], 0);
            mapper.AssertAreEqual("player.team.4.move3pp", 0xD23A, [0], 0);
            mapper.AssertAreEqual("player.team.4.move4pp", 0xD23B, [0], 0);
            mapper.AssertAreEqual("player.team.4.move1ppUp", 0xD238, [0], 0);
            mapper.AssertAreEqual("player.team.4.move2ppUp", 0xD239, [0], 0);
            mapper.AssertAreEqual("player.team.4.move3ppUp", 0xD23A, [0], 0);
            mapper.AssertAreEqual("player.team.4.move4ppUp", 0xD23B, [0], 0);
            mapper.AssertAreEqual("player.team.4.statExpHp", 0xD22C, [0, 0], 0);
            mapper.AssertAreEqual("player.team.4.statExpAttack", 0xD22E, [0, 0], 0);
            mapper.AssertAreEqual("player.team.4.statExpDefense", 0xD230, [0, 0], 0);
            mapper.AssertAreEqual("player.team.4.statExpSpeed", 0xD232, [0, 0], 0);
            mapper.AssertAreEqual("player.team.4.statExpSpecial", 0xD234, [0, 0], 0);
            mapper.AssertAreEqual("player.team.4.type1", 0xD220, [0], "Normal");
            mapper.AssertAreEqual("player.team.4.type2", 0xD221, [0], "Normal");
            mapper.AssertAreEqual("player.team.4.trainerId", 0xD227, [0, 0], 0);
            mapper.AssertAreEqual("player.team.4.catchRate", 0xD222, [0], 0);
            mapper.AssertAreEqual("player.team.5.nickname", 0xD2EC, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("player.team.5.species", 0xD247, [0], null);
            mapper.AssertAreEqual("player.team.5.pokedexNumber", 0xD247, [0], null);
            mapper.AssertAreEqual("player.team.5.level", 0xD268, [0], 0);
            mapper.AssertAreEqual("player.team.5.expPoints", 0xD255, [0, 0, 0], 0);
            mapper.AssertAreEqual("player.team.5.statusCondition", 0xD24B, [0], " ");
            mapper.AssertAreEqual("player.team.5.maxHp", 0xD269, [0, 0], 0);
            mapper.AssertAreEqual("player.team.5.hp", 0xD248, [0, 0], 0);
            mapper.AssertAreEqual("player.team.5.attack", 0xD26B, [0, 0], 0);
            mapper.AssertAreEqual("player.team.5.defense", 0xD26D, [0, 0], 0);
            mapper.AssertAreEqual("player.team.5.speed", 0xD26F, [0, 0], 0);
            mapper.AssertAreEqual("player.team.5.special", 0xD271, [0, 0], 0);
            mapper.AssertAreEqual("player.team.5.dvAttack", 0xD262, [0], 0);
            mapper.AssertAreEqual("player.team.5.dvDefense", 0xD262, [0], 0);
            mapper.AssertAreEqual("player.team.5.dvSpeed", 0xD263, [0], 0);
            mapper.AssertAreEqual("player.team.5.dvSpecial", 0xD263, [0], 0);
            mapper.AssertAreEqual("player.team.5.move1", 0xD24F, [0], null);
            mapper.AssertAreEqual("player.team.5.move2", 0xD250, [0], null);
            mapper.AssertAreEqual("player.team.5.move3", 0xD251, [0], null);
            mapper.AssertAreEqual("player.team.5.move4", 0xD252, [0], null);
            mapper.AssertAreEqual("player.team.5.move1pp", 0xD264, [0], 0);
            mapper.AssertAreEqual("player.team.5.move2pp", 0xD265, [0], 0);
            mapper.AssertAreEqual("player.team.5.move3pp", 0xD266, [0], 0);
            mapper.AssertAreEqual("player.team.5.move4pp", 0xD267, [0], 0);
            mapper.AssertAreEqual("player.team.5.move1ppUp", 0xD264, [0], 0);
            mapper.AssertAreEqual("player.team.5.move2ppUp", 0xD265, [0], 0);
            mapper.AssertAreEqual("player.team.5.move3ppUp", 0xD266, [0], 0);
            mapper.AssertAreEqual("player.team.5.move4ppUp", 0xD267, [0], 0);
            mapper.AssertAreEqual("player.team.5.statExpHp", 0xD258, [0, 0], 0);
            mapper.AssertAreEqual("player.team.5.statExpAttack", 0xD25A, [0, 0], 0);
            mapper.AssertAreEqual("player.team.5.statExpDefense", 0xD25C, [0, 0], 0);
            mapper.AssertAreEqual("player.team.5.statExpSpeed", 0xD25E, [0, 0], 0);
            mapper.AssertAreEqual("player.team.5.statExpSpecial", 0xD260, [0, 0], 0);
            mapper.AssertAreEqual("player.team.5.type1", 0xD24C, [0], "Normal");
            mapper.AssertAreEqual("player.team.5.type2", 0xD24D, [0], "Normal");
            mapper.AssertAreEqual("player.team.5.trainerId", 0xD253, [0, 0], 0);
            mapper.AssertAreEqual("player.team.5.catchRate", 0xD24E, [0], 0);
            mapper.AssertAreEqual("player.itemCount", 0xD31D, [1], 1);
            mapper.AssertAreEqual("player.items.0.item", 0xD31E, [20], "POTION");
            mapper.AssertAreEqual("player.items.0.quantity", 0xD31F, [1], 1);
            mapper.AssertAreEqual("player.items.1.item", 0xD320, [255], null);
            mapper.AssertAreEqual("player.items.1.quantity", 0xD321, [0], 0);
            mapper.AssertAreEqual("player.items.2.item", 0xD322, [0], null);
            mapper.AssertAreEqual("player.items.2.quantity", 0xD323, [0], 0);
            mapper.AssertAreEqual("player.items.3.item", 0xD324, [0], null);
            mapper.AssertAreEqual("player.items.3.quantity", 0xD325, [0], 0);
            mapper.AssertAreEqual("player.items.4.item", 0xD326, [0], null);
            mapper.AssertAreEqual("player.items.4.quantity", 0xD327, [0], 0);
            mapper.AssertAreEqual("player.items.5.item", 0xD328, [0], null);
            mapper.AssertAreEqual("player.items.5.quantity", 0xD329, [0], 0);
            mapper.AssertAreEqual("player.items.6.item", 0xD32A, [0], null);
            mapper.AssertAreEqual("player.items.6.quantity", 0xD32B, [0], 0);
            mapper.AssertAreEqual("player.items.7.item", 0xD32C, [0], null);
            mapper.AssertAreEqual("player.items.7.quantity", 0xD32D, [0], 0);
            mapper.AssertAreEqual("player.items.8.item", 0xD32E, [0], null);
            mapper.AssertAreEqual("player.items.8.quantity", 0xD32F, [0], 0);
            mapper.AssertAreEqual("player.items.9.item", 0xD330, [0], null);
            mapper.AssertAreEqual("player.items.9.quantity", 0xD331, [0], 0);
            mapper.AssertAreEqual("player.items.10.item", 0xD332, [0], null);
            mapper.AssertAreEqual("player.items.10.quantity", 0xD333, [0], 0);
            mapper.AssertAreEqual("player.items.11.item", 0xD334, [0], null);
            mapper.AssertAreEqual("player.items.11.quantity", 0xD335, [0], 0);
            mapper.AssertAreEqual("player.items.12.item", 0xD336, [0], null);
            mapper.AssertAreEqual("player.items.12.quantity", 0xD337, [0], 0);
            mapper.AssertAreEqual("player.items.13.item", 0xD338, [0], null);
            mapper.AssertAreEqual("player.items.13.quantity", 0xD339, [0], 0);
            mapper.AssertAreEqual("player.items.14.item", 0xD33A, [0], null);
            mapper.AssertAreEqual("player.items.14.quantity", 0xD33B, [0], 0);
            mapper.AssertAreEqual("player.items.15.item", 0xD33C, [0], null);
            mapper.AssertAreEqual("player.items.15.quantity", 0xD33D, [0], 0);
            mapper.AssertAreEqual("player.items.16.item", 0xD33E, [0], null);
            mapper.AssertAreEqual("player.items.16.quantity", 0xD33F, [0], 0);
            mapper.AssertAreEqual("player.items.17.item", 0xD340, [0], null);
            mapper.AssertAreEqual("player.items.17.quantity", 0xD341, [0], 0);
            mapper.AssertAreEqual("player.items.18.item", 0xD342, [0], null);
            mapper.AssertAreEqual("player.items.18.quantity", 0xD343, [0], 0);
            mapper.AssertAreEqual("player.items.19.item", 0xD344, [0], null);
            mapper.AssertAreEqual("player.items.19.quantity", 0xD345, [0], 0);
            mapper.AssertAreEqual("player.money", 0xD347, [0, 49, 117], 3175);
            mapper.AssertAreEqual("player.gameCornerCoins", 0xD5A4, [0, 0], 0);
            // mapper.AssertAreEqual("player.pokedexSeen", 0xD30A, [72, 146, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], (bool[])[false, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]);
            // mapper.AssertAreEqual("player.pokedexCaught", 0xD2F7, [8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], (bool[])[false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]);
            mapper.AssertAreEqual("player.badges.badge1", 0xD356, [0], false);
            mapper.AssertAreEqual("player.badges.badge2", 0xD356, [0], false);
            mapper.AssertAreEqual("player.badges.badge3", 0xD356, [0], false);
            mapper.AssertAreEqual("player.badges.badge4", 0xD356, [0], false);
            mapper.AssertAreEqual("player.badges.badge5", 0xD356, [0], false);
            mapper.AssertAreEqual("player.badges.badge6", 0xD356, [0], false);
            mapper.AssertAreEqual("player.badges.badge7", 0xD356, [0], false);
            mapper.AssertAreEqual("player.badges.badge8", 0xD356, [0], false);
            mapper.AssertAreEqual("player.starterPokemon", 0xD717, [176], "Charmander");
            mapper.AssertAreEqual("player.joypadSimulation", 0xCD38, [0], false);
            mapper.AssertAreEqual("player.joypadIgnore", 0xCD6B, [0], 0);
            mapper.AssertAreEqual("overworld.map", 0xD35E, [51], "Viridian Forest");
            mapper.AssertAreEqual("overworld.y", 0xD361, [33], 33);
            mapper.AssertAreEqual("overworld.x", 0xD362, [27], 27);
            mapper.AssertAreEqual("overworld.encounterRate", 0xD887, [8], 8);
            mapper.AssertAreEqual("overworld.encounters.common.0.level", 0xD888, [4], 4);
            mapper.AssertAreEqual("overworld.encounters.common.0.pokemon", 0xD889, [112], "Weedle");
            mapper.AssertAreEqual("overworld.encounters.common.1.level", 0xD88A, [5], 5);
            mapper.AssertAreEqual("overworld.encounters.common.1.pokemon", 0xD88B, [113], "Kakuna");
            mapper.AssertAreEqual("overworld.encounters.common.2.level", 0xD88C, [3], 3);
            mapper.AssertAreEqual("overworld.encounters.common.2.pokemon", 0xD88D, [112], "Weedle");
            mapper.AssertAreEqual("overworld.encounters.common.3.level", 0xD88E, [5], 5);
            mapper.AssertAreEqual("overworld.encounters.common.3.pokemon", 0xD88F, [112], "Weedle");
            //mapper.AssertAreEqual("overworld.encounters.common.4.level", 0xD890, [4], 4);
            //mapper.AssertAreEqual("overworld.encounters.common.4.pokemon", 0xD891, [113], "Kakuna");
            //mapper.AssertAreEqual("overworld.encounters.uncommon.0.level", 0xD88A, [5], 5);
            //mapper.AssertAreEqual("overworld.encounters.uncommon.0.pokemon", 0xD88B, [113], "Kakuna");
            mapper.AssertAreEqual("overworld.encounters.uncommon.1.level", 0xD892, [6], 6);
            mapper.AssertAreEqual("overworld.encounters.uncommon.1.pokemon", 0xD893, [113], "Kakuna");
            mapper.AssertAreEqual("overworld.encounters.uncommon.2.level", 0xD894, [4], 4);
            mapper.AssertAreEqual("overworld.encounters.uncommon.2.pokemon", 0xD895, [124], "Metapod");
            mapper.AssertAreEqual("overworld.encounters.uncommon.3.level", 0xD896, [3], 3);
            mapper.AssertAreEqual("overworld.encounters.uncommon.3.pokemon", 0xD897, [123], "Caterpie");
            mapper.AssertAreEqual("overworld.encounters.rare.0.level", 0xD898, [3], 3);
            mapper.AssertAreEqual("overworld.encounters.rare.0.pokemon", 0xD899, [84], "Pikachu");
            mapper.AssertAreEqual("overworld.encounters.rare.1.level", 0xD89A, [5], 5);
            mapper.AssertAreEqual("overworld.encounters.rare.1.pokemon", 0xD89B, [84], "Pikachu");
            mapper.AssertAreEqual("overworld.repelCount", 0xD0DB, [0], 0);
            mapper.AssertAreEqual("overworld.safariZone.safariTime", 0xD70D, [0], 0);
            mapper.AssertAreEqual("overworld.safariZone.safariBalls", 0xDA47, [0], 0);
            mapper.AssertAreEqual("overworld.safariZone.oppBaitingFactor", 0xCCE9, [0], 0);
            mapper.AssertAreEqual("overworld.mapData.tileset", 0xD367, [3], 3);
            mapper.AssertAreEqual("overworld.mapData.height", 0xD368, [24], 24);
            mapper.AssertAreEqual("overworld.mapData.width", 0xD369, [17], 17);
            mapper.AssertAreEqual("overworld.mapData.palette", 0xD35D, [0], 0);
            mapper.AssertAreEqual("overworld.mapData.lastMapLocation", 0xD366, [10], "Saffron City");
            mapper.AssertAreEqual("events.beatChampion", 0xD867, [0], false);
            mapper.AssertAreEqual("events.overworldFlags.countPlayTime", 0xD731, [0], false);
            mapper.AssertAreEqual("events.overworldFlags.debugMode", 0xD731, [0], false);
            mapper.AssertAreEqual("events.overworldFlags.flyOrDungeon", 0xD731, [0], false);
            mapper.AssertAreEqual("events.overworldFlags.flyWarp", 0xD731, [0], false);
            mapper.AssertAreEqual("events.overworldFlags.dungeonWarp", 0xD731, [0], false);
            mapper.AssertAreEqual("events.overworldFlags.forceBike", 0xD731, [0], false);
            mapper.AssertAreEqual("events.overworldFlags.destinationIsBlackout", 0xD731, [0], false);
            mapper.AssertAreEqual("events.trashCanPuzzle", 0xD773, [0], false);
            mapper.AssertAreEqual("battle.type", 0xD057, [2], "Trainer");
            mapper.AssertAreEqual("battle.animationTurn", 0xFFF4, [0], "Player");
            mapper.AssertAreEqual("battle.specialType", 0xD05A, [0], "Normal");
            mapper.AssertAreEqual("battle.lowHealthAlarm", 0xCCF6, [1], "Disabled");
            mapper.AssertAreEqual("battle.attackDamage", 0xD0D8, [4], 4);
            mapper.AssertAreEqual("battle.trainer.name", 0xD04A, [129], "B");
            mapper.AssertAreEqual("battle.trainer.class", 0xD031, [2], "BUG CATCHER");
            mapper.AssertAreEqual("battle.trainer.number", 0xD05D, [1], 1);
            mapper.AssertAreEqual("battle.trainer.gymLeader", 0xD05C, [0], 0);
            mapper.AssertAreEqual("battle.trainer.totalPokemon", 0xD89C, [2], 2);
            mapper.AssertAreEqual("battle.trainer.team.0.nickname", 0xD9EE, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("battle.trainer.team.0.species", 0xD8A4, [112], "Weedle");
            mapper.AssertAreEqual("battle.trainer.team.0.pokedexNumber", 0xD8A4, [112], "13");
            mapper.AssertAreEqual("battle.trainer.team.0.level", 0xD8C5, [6], 6);
            mapper.AssertAreEqual("battle.trainer.team.0.expPoints", 0xD8B2, [0, 0, 216], 216);
            mapper.AssertAreEqual("battle.trainer.team.0.statusCondition", 0xD8A8, [0], " ");
            mapper.AssertAreEqual("battle.trainer.team.0.maxHp", 0xD8C6, [0, 21], 21);
            mapper.AssertAreEqual("battle.trainer.team.0.hp", 0xD8A5, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.0.attack", 0xD8C8, [0, 10], 10);
            mapper.AssertAreEqual("battle.trainer.team.0.defense", 0xD8CA, [0, 9], 9);
            mapper.AssertAreEqual("battle.trainer.team.0.speed", 0xD8CC, [0, 11], 11);
            mapper.AssertAreEqual("battle.trainer.team.0.special", 0xD8CE, [0, 8], 8);
            mapper.AssertAreEqual("battle.trainer.team.0.dvAttack", 0xD8BF, [152], 9);
            mapper.AssertAreEqual("battle.trainer.team.0.dvDefense", 0xD8BF, [152], 8);
            mapper.AssertAreEqual("battle.trainer.team.0.dvSpeed", 0xD8C0, [136], 8);
            mapper.AssertAreEqual("battle.trainer.team.0.dvSpecial", 0xD8C0, [136], 8);
            mapper.AssertAreEqual("battle.trainer.team.0.move1", 0xD8AC, [40], "POISON STING");
            mapper.AssertAreEqual("battle.trainer.team.0.move2", 0xD8AD, [81], "STRING SHOT");
            mapper.AssertAreEqual("battle.trainer.team.0.move3", 0xD8AE, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.0.move4", 0xD8AF, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.0.move1pp", 0xD8C1, [35], 35);
            mapper.AssertAreEqual("battle.trainer.team.0.move2pp", 0xD8C2, [40], 40);
            mapper.AssertAreEqual("battle.trainer.team.0.move3pp", 0xD8C3, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.0.move4pp", 0xD8C4, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.0.move1ppUp", 0xD8C1, [35], 0);
            mapper.AssertAreEqual("battle.trainer.team.0.move2ppUp", 0xD8C2, [40], 0);
            mapper.AssertAreEqual("battle.trainer.team.0.move3ppUp", 0xD8C3, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.0.move4ppUp", 0xD8C4, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.0.statExpHp", 0xD8B5, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.0.statExpAttack", 0xD8B7, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.0.statExpDefense", 0xD8B9, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.0.statExpSpeed", 0xD8BB, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.0.statExpSpecial", 0xD8BD, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.0.type1", 0xD8A9, [7], "Bug");
            mapper.AssertAreEqual("battle.trainer.team.0.type2", 0xD8AA, [3], "Poison");
            mapper.AssertAreEqual("battle.trainer.team.0.trainerId", 0xD8B0, [44, 131], 11395);
            mapper.AssertAreEqual("battle.trainer.team.0.catchRate", 0xD8AB, [255], 255);
            mapper.AssertAreEqual("battle.trainer.team.1.nickname", 0xD9F9, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("battle.trainer.team.1.species", 0xD8D0, [123], "Caterpie");
            mapper.AssertAreEqual("battle.trainer.team.1.pokedexNumber", 0xD8D0, [123], "10");
            mapper.AssertAreEqual("battle.trainer.team.1.level", 0xD8F1, [6], 6);
            mapper.AssertAreEqual("battle.trainer.team.1.expPoints", 0xD8DE, [0, 0, 216], 216);
            mapper.AssertAreEqual("battle.trainer.team.1.statusCondition", 0xD8D4, [0], " ");
            mapper.AssertAreEqual("battle.trainer.team.1.maxHp", 0xD8F2, [0, 22], 22);
            mapper.AssertAreEqual("battle.trainer.team.1.hp", 0xD8D1, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.attack", 0xD8F4, [0, 9], 9);
            mapper.AssertAreEqual("battle.trainer.team.1.defense", 0xD8F6, [0, 10], 10);
            mapper.AssertAreEqual("battle.trainer.team.1.speed", 0xD8F8, [0, 11], 11);
            mapper.AssertAreEqual("battle.trainer.team.1.special", 0xD8FA, [0, 8], 8);
            mapper.AssertAreEqual("battle.trainer.team.1.dvAttack", 0xD8EB, [152], 9);
            mapper.AssertAreEqual("battle.trainer.team.1.dvDefense", 0xD8EB, [152], 8);
            mapper.AssertAreEqual("battle.trainer.team.1.dvSpeed", 0xD8EC, [136], 8);
            mapper.AssertAreEqual("battle.trainer.team.1.dvSpecial", 0xD8EC, [136], 8);
            mapper.AssertAreEqual("battle.trainer.team.1.move1", 0xD8D8, [33], "TACKLE");
            mapper.AssertAreEqual("battle.trainer.team.1.move2", 0xD8D9, [81], "STRING SHOT");
            mapper.AssertAreEqual("battle.trainer.team.1.move3", 0xD8DA, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.1.move4", 0xD8DB, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.1.move1pp", 0xD8ED, [35], 35);
            mapper.AssertAreEqual("battle.trainer.team.1.move2pp", 0xD8EE, [40], 40);
            mapper.AssertAreEqual("battle.trainer.team.1.move3pp", 0xD8EF, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.move4pp", 0xD8F0, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.move1ppUp", 0xD8ED, [35], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.move2ppUp", 0xD8EE, [40], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.move3ppUp", 0xD8EF, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.move4ppUp", 0xD8F0, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.statExpHp", 0xD8E1, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.statExpAttack", 0xD8E3, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.statExpDefense", 0xD8E5, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.statExpSpeed", 0xD8E7, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.statExpSpecial", 0xD8E9, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.type1", 0xD8D5, [7], "Bug");
            mapper.AssertAreEqual("battle.trainer.team.1.type2", 0xD8D6, [7], "Bug");
            mapper.AssertAreEqual("battle.trainer.team.1.trainerId", 0xD8DC, [44, 131], 11395);
            mapper.AssertAreEqual("battle.trainer.team.1.catchRate", 0xD8D7, [255], 255);
            mapper.AssertAreEqual("battle.trainer.team.2.nickname", 0xDA04, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("battle.trainer.team.2.species", 0xD8FC, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.2.pokedexNumber", 0xD8FC, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.2.level", 0xD91D, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.expPoints", 0xD90A, [0, 0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.statusCondition", 0xD900, [0], " ");
            mapper.AssertAreEqual("battle.trainer.team.2.maxHp", 0xD91E, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.hp", 0xD8FD, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.attack", 0xD920, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.defense", 0xD922, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.speed", 0xD924, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.special", 0xD926, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.dvAttack", 0xD917, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.dvDefense", 0xD917, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.dvSpeed", 0xD918, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.dvSpecial", 0xD918, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.move1", 0xD904, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.2.move2", 0xD905, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.2.move3", 0xD906, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.2.move4", 0xD907, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.2.move1pp", 0xD919, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.move2pp", 0xD91A, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.move3pp", 0xD91B, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.move4pp", 0xD91C, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.move1ppUp", 0xD919, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.move2ppUp", 0xD91A, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.move3ppUp", 0xD91B, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.move4ppUp", 0xD91C, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.statExpHp", 0xD90D, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.statExpAttack", 0xD90F, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.statExpDefense", 0xD911, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.statExpSpeed", 0xD913, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.statExpSpecial", 0xD915, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.type1", 0xD901, [0], "Normal");
            mapper.AssertAreEqual("battle.trainer.team.2.type2", 0xD902, [0], "Normal");
            mapper.AssertAreEqual("battle.trainer.team.2.trainerId", 0xD908, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.catchRate", 0xD903, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.nickname", 0xDA0F, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("battle.trainer.team.3.species", 0xD928, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.3.pokedexNumber", 0xD928, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.3.level", 0xD949, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.expPoints", 0xD936, [0, 0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.statusCondition", 0xD92C, [0], " ");
            mapper.AssertAreEqual("battle.trainer.team.3.maxHp", 0xD94A, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.hp", 0xD929, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.attack", 0xD94C, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.defense", 0xD94E, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.speed", 0xD950, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.special", 0xD952, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.dvAttack", 0xD943, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.dvDefense", 0xD943, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.dvSpeed", 0xD944, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.dvSpecial", 0xD944, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.move1", 0xD930, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.3.move2", 0xD931, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.3.move3", 0xD932, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.3.move4", 0xD933, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.3.move1pp", 0xD945, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.move2pp", 0xD946, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.move3pp", 0xD947, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.move4pp", 0xD948, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.move1ppUp", 0xD945, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.move2ppUp", 0xD946, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.move3ppUp", 0xD947, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.move4ppUp", 0xD948, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.statExpHp", 0xD939, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.statExpAttack", 0xD93B, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.statExpDefense", 0xD93D, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.statExpSpeed", 0xD93F, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.statExpSpecial", 0xD941, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.type1", 0xD92D, [0], "Normal");
            mapper.AssertAreEqual("battle.trainer.team.3.type2", 0xD92E, [0], "Normal");
            mapper.AssertAreEqual("battle.trainer.team.3.trainerId", 0xD934, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.catchRate", 0xD92F, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.nickname", 0xDA1A, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("battle.trainer.team.4.species", 0xD954, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.4.pokedexNumber", 0xD954, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.4.level", 0xD975, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.expPoints", 0xD962, [0, 0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.statusCondition", 0xD958, [0], " ");
            mapper.AssertAreEqual("battle.trainer.team.4.maxHp", 0xD976, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.hp", 0xD955, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.attack", 0xD978, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.defense", 0xD97A, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.speed", 0xD97C, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.special", 0xD97E, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.dvAttack", 0xD96F, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.dvDefense", 0xD96F, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.dvSpeed", 0xD970, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.dvSpecial", 0xD970, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.move1", 0xD95C, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.4.move2", 0xD95D, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.4.move3", 0xD95E, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.4.move4", 0xD95F, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.4.move1pp", 0xD971, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.move2pp", 0xD972, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.move3pp", 0xD973, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.move4pp", 0xD974, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.move1ppUp", 0xD971, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.move2ppUp", 0xD972, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.move3ppUp", 0xD973, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.move4ppUp", 0xD974, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.statExpHp", 0xD965, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.statExpAttack", 0xD967, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.statExpDefense", 0xD969, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.statExpSpeed", 0xD96B, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.statExpSpecial", 0xD96D, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.type1", 0xD959, [0], "Normal");
            mapper.AssertAreEqual("battle.trainer.team.4.type2", 0xD95A, [0], "Normal");
            mapper.AssertAreEqual("battle.trainer.team.4.trainerId", 0xD960, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.catchRate", 0xD95B, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.nickname", 0xDA25, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("battle.trainer.team.5.species", 0xD980, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.5.pokedexNumber", 0xD980, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.5.level", 0xD9A1, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.expPoints", 0xD98E, [0, 0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.statusCondition", 0xD984, [0], " ");
            mapper.AssertAreEqual("battle.trainer.team.5.maxHp", 0xD9A2, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.hp", 0xD981, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.attack", 0xD9A4, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.defense", 0xD9A6, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.speed", 0xD9A8, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.special", 0xD9AA, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.dvAttack", 0xD99B, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.dvDefense", 0xD99B, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.dvSpeed", 0xD99C, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.dvSpecial", 0xD99C, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.move1", 0xD988, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.5.move2", 0xD989, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.5.move3", 0xD98A, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.5.move4", 0xD98B, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.5.move1pp", 0xD99D, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.move2pp", 0xD99E, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.move3pp", 0xD99F, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.move4pp", 0xD9A0, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.move1ppUp", 0xD99D, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.move2ppUp", 0xD99E, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.move3ppUp", 0xD99F, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.move4ppUp", 0xD9A0, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.statExpHp", 0xD991, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.statExpAttack", 0xD993, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.statExpDefense", 0xD995, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.statExpSpeed", 0xD997, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.statExpSpecial", 0xD999, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.type1", 0xD985, [0], "Normal");
            mapper.AssertAreEqual("battle.trainer.team.5.type2", 0xD986, [0], "Normal");
            mapper.AssertAreEqual("battle.trainer.team.5.trainerId", 0xD98C, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.catchRate", 0xD987, [0], 0);
            mapper.AssertAreEqual("battle.yourPokemon.partyPos", 0xCC2F, [0], 0);
            mapper.AssertAreEqual("battle.yourPokemon.nickname", 0xD009, [128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 80], "AAAAAAAAAA");
            mapper.AssertAreEqual("battle.yourPokemon.species", 0xD014, [176], "Charmander");
            mapper.AssertAreEqual("battle.yourPokemon.pokedexNumber", 0xD014, [176], "4");
            mapper.AssertAreEqual("battle.yourPokemon.type1", 0xD019, [20], "Fire");
            mapper.AssertAreEqual("battle.yourPokemon.type2", 0xD01A, [20], "Fire");
            mapper.AssertAreEqual("battle.yourPokemon.level", 0xD022, [8], 8);
            mapper.AssertAreEqual("battle.yourPokemon.modStageAttack", 0xCD1A, [7], "0");
            mapper.AssertAreEqual("battle.yourPokemon.modStageDefense", 0xCD1B, [7], "0");
            mapper.AssertAreEqual("battle.yourPokemon.modStageSpeed", 0xCD1C, [6], "-1");
            mapper.AssertAreEqual("battle.yourPokemon.modStageSpecial", 0xCD1D, [7], "0");
            mapper.AssertAreEqual("battle.yourPokemon.modStageAccuracy", 0xCD1E, [7], "0");
            mapper.AssertAreEqual("battle.yourPokemon.modStageEvasion", 0xCD1F, [7], "0");
            mapper.AssertAreEqual("battle.yourPokemon.hp", 0xD015, [0, 7], 7);
            mapper.AssertAreEqual("battle.yourPokemon.maxHp", 0xD023, [0, 25], 25);
            mapper.AssertAreEqual("battle.yourPokemon.attack", 0xD025, [0, 13], 13);
            mapper.AssertAreEqual("battle.yourPokemon.defense", 0xD027, [0, 14], 14);
            mapper.AssertAreEqual("battle.yourPokemon.speed", 0xD029, [0, 11], 11);
            mapper.AssertAreEqual("battle.yourPokemon.special", 0xD02B, [0, 15], 15);
            mapper.AssertAreEqual("battle.yourPokemon.battleStatHp", 0xD015, [0, 7], 7);
            mapper.AssertAreEqual("battle.yourPokemon.battleStatMaxHp", 0xD023, [0, 25], 25);
            mapper.AssertAreEqual("battle.yourPokemon.battleStatAttack", 0xD025, [0, 13], 13);
            mapper.AssertAreEqual("battle.yourPokemon.battleStatDefense", 0xD027, [0, 14], 14);
            mapper.AssertAreEqual("battle.yourPokemon.battleStatSpeed", 0xD029, [0, 11], 11);
            mapper.AssertAreEqual("battle.yourPokemon.battleStatSpecial", 0xD02B, [0, 15], 15);
            mapper.AssertAreEqual("battle.yourPokemon.battleStatusCondition", 0xD018, [0], " ");
            mapper.AssertAreEqual("battle.yourPokemon.tempStatusConfusion", 0xD062, [0], null);
            mapper.AssertAreEqual("battle.yourPokemon.tempStatusBadPoison", 0xD064, [0], null);
            mapper.AssertAreEqual("battle.yourPokemon.move1", 0xD01C, [10], "SCRATCH");
            mapper.AssertAreEqual("battle.yourPokemon.move2", 0xD01D, [45], "GROWL");
            mapper.AssertAreEqual("battle.yourPokemon.move3", 0xD01E, [0], null);
            mapper.AssertAreEqual("battle.yourPokemon.move4", 0xD01F, [0], null);
            mapper.AssertAreEqual("battle.yourPokemon.move1pp", 0xD02D, [26], 26);
            mapper.AssertAreEqual("battle.yourPokemon.move2pp", 0xD02E, [40], 40);
            mapper.AssertAreEqual("battle.yourPokemon.move3pp", 0xD02F, [0], 0);
            mapper.AssertAreEqual("battle.yourPokemon.move4pp", 0xD030, [0], 0);
            mapper.AssertAreEqual("battle.yourPokemon.effects.bide", 0xD062, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.thrash", 0xD062, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.multiHit", 0xD062, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.flinch", 0xD062, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.charging", 0xD062, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.multiTurn", 0xD062, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.invulnerable", 0xD062, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.confusion", 0xD062, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.xAccuracy", 0xD063, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.mist", 0xD063, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.focusEnergy", 0xD063, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.hasSubstitute", 0xD063, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.recharge", 0xD063, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.rage", 0xD063, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.leechSeeded", 0xD063, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.toxic", 0xD064, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.lightScreen", 0xD064, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.reflect", 0xD064, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.transformed", 0xD064, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.counters.multiHit", 0xD06A, [0], 0);
            mapper.AssertAreEqual("battle.yourPokemon.counters.confusion", 0xD064, [0], 0);
            mapper.AssertAreEqual("battle.yourPokemon.counters.toxic", 0xD06B, [0], 0);
            mapper.AssertAreEqual("battle.yourPokemon.counters.disable", 0xD06D, [0, 0], 0);
            mapper.AssertAreEqual("battle.enemyPokemon.partyPos", 0xCFE8, [1], 1);
            mapper.AssertAreEqual("battle.enemyPokemon.species", 0xCFD8, [0], null);
            mapper.AssertAreEqual("battle.enemyPokemon.pokedexNumber", 0xCFD8, [0], null);
            mapper.AssertAreEqual("battle.enemyPokemon.type1", 0xCFEA, [7], "Bug");
            mapper.AssertAreEqual("battle.enemyPokemon.type2", 0xCFEB, [7], "Bug");
            mapper.AssertAreEqual("battle.enemyPokemon.level", 0xCFF3, [6], 6);
            mapper.AssertAreEqual("battle.enemyPokemon.maxHp", 0xCFF4, [0, 22], 22);
            mapper.AssertAreEqual("battle.enemyPokemon.hp", 0xCFE6, [0, 0], 0);
            mapper.AssertAreEqual("battle.enemyPokemon.attack", 0xCFF6, [0, 9], 9);
            mapper.AssertAreEqual("battle.enemyPokemon.defense", 0xCFF8, [0, 10], 10);
            mapper.AssertAreEqual("battle.enemyPokemon.speed", 0xCFFA, [0, 11], 11);
            mapper.AssertAreEqual("battle.enemyPokemon.special", 0xCFFC, [0, 8], 8);
            mapper.AssertAreEqual("battle.enemyPokemon.statusCondition", 0xCFE9, [0], " ");
            mapper.AssertAreEqual("battle.enemyPokemon.modEnemyStageAttack", 0xCD2E, [7], "0");
            mapper.AssertAreEqual("battle.enemyPokemon.modEnemyStageDefense", 0xCD2F, [7], "0");
            mapper.AssertAreEqual("battle.enemyPokemon.modEnemyStageSpeed", 0xCD30, [7], "0");
            mapper.AssertAreEqual("battle.enemyPokemon.modEnemyStageSpecial", 0xCD31, [7], "0");
            mapper.AssertAreEqual("battle.enemyPokemon.modEnemyStageAccuracy", 0xCD32, [7], "0");
            mapper.AssertAreEqual("battle.enemyPokemon.modEnemyStageEvasion", 0xCD33, [7], "0");
            mapper.AssertAreEqual("battle.enemyPokemon.move1", 0xCFED, [33], "TACKLE");
            mapper.AssertAreEqual("battle.enemyPokemon.move2", 0xCFEE, [81], "STRING SHOT");
            mapper.AssertAreEqual("battle.enemyPokemon.move3", 0xCFEF, [0], null);
            mapper.AssertAreEqual("battle.enemyPokemon.move4", 0xCFF0, [0], null);
            mapper.AssertAreEqual("battle.enemyPokemon.dvAttack", 0xCFF1, [152], 9);
            mapper.AssertAreEqual("battle.enemyPokemon.dvDefense", 0xCFF1, [152], 8);
            mapper.AssertAreEqual("battle.enemyPokemon.dvSpeed", 0xCFF2, [136], 8);
            mapper.AssertAreEqual("battle.enemyPokemon.dvSpecial", 0xCFF2, [136], 8);
            mapper.AssertAreEqual("battle.enemyPokemon.baseHp", 0xD002, [45], 13);
            mapper.AssertAreEqual("battle.enemyPokemon.baseAttack", 0xD003, [30], 14);
            mapper.AssertAreEqual("battle.enemyPokemon.baseDefense", 0xD004, [35], 3);
            mapper.AssertAreEqual("battle.enemyPokemon.baseSpeed", 0xD005, [45], 13);
            mapper.AssertAreEqual("battle.enemyPokemon.baseSpecial", 0xD006, [20], 4);
            mapper.AssertAreEqual("battle.enemyPokemon.baseExp", 0xD008, [53], 5);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.bide", 0xD067, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.thrash", 0xD067, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.multiHit", 0xD067, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.flinch", 0xD067, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.charging", 0xD067, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.multiTurn", 0xD067, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.invulnerable", 0xD067, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.confusion", 0xD067, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.xAccuracy", 0xD068, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.mist", 0xD068, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.focusEnergy", 0xD068, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.hasSubstitute", 0xD068, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.recharge", 0xD068, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.rage", 0xD068, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.leechSeeded", 0xD068, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.toxic", 0xD069, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.lightScreen", 0xD069, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.reflect", 0xD069, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.transformed", 0xD069, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.counters.multiHit", 0xD06F, [0], 0);
            mapper.AssertAreEqual("battle.enemyPokemon.counters.confusion", 0xD070, [0], 0);
            mapper.AssertAreEqual("battle.enemyPokemon.counters.toxic", 0xD071, [0], 0);
            mapper.AssertAreEqual("battle.enemyPokemon.counters.disable", 0xD072, [0], 0);
            mapper.AssertAreEqual("battle.playerMove.move", 0xCFD2, [10], "SCRATCH");
            mapper.AssertAreEqual("battle.playerMove.effect", 0xCFD3, [0], 0);
            mapper.AssertAreEqual("battle.playerMove.power", 0xCFD4, [40], 40);
            mapper.AssertAreEqual("battle.playerMove.type", 0xCFD5, [0], "Normal");
            mapper.AssertAreEqual("battle.playerMove.accuracy", 0xCFD6, [255], 100);
            mapper.AssertAreEqual("battle.playerMove.maxPP", 0xCFD7, [35], 35);
            mapper.AssertAreEqual("battle.enemyMove.move", 0xCFCC, [33], "TACKLE");
            mapper.AssertAreEqual("battle.enemyMove.effect", 0xCFCD, [0], 0);
            mapper.AssertAreEqual("battle.enemyMove.power", 0xCFCE, [35], 35);
            mapper.AssertAreEqual("battle.enemyMove.type", 0xCFCF, [0], "Normal");
            mapper.AssertAreEqual("battle.enemyMove.accuracy", 0xCFD0, [242], 95);
            mapper.AssertAreEqual("battle.enemyMove.maxPP", 0xCFD1, [35], 35);
            mapper.AssertAreEqual("battle.turnInfo.battleStart", 0xCCF5, [1], 1);
            mapper.AssertAreEqual("battle.turnInfo.trainerDefeated", 0xCCF6, [1], 1);
            mapper.AssertAreEqual("battle.turnInfo.nextAttackDamage", 0xD0D8, [4], 4);
            mapper.AssertAreEqual("pokemart.itemCount", 0xCF7C, [4], 4);
            mapper.AssertAreEqual("pokemart.items.0", 0xCF7C, [4], "POK\u00e9 BALL");
            mapper.AssertAreEqual("pokemart.items.1", 0xCF7D, [11], "ANTIDOTE");
            mapper.AssertAreEqual("pokemart.items.2", 0xCF7E, [15], "PARLYZ HEAL");
            mapper.AssertAreEqual("pokemart.items.3", 0xCF7F, [12], "BURN HEAL");
            mapper.AssertAreEqual("pokemart.items.4", 0xCF80, [255], null);
            mapper.AssertAreEqual("pokemart.items.5", 0xCF81, [0], null);
            mapper.AssertAreEqual("pokemart.items.6", 0xCF82, [0], null);
            mapper.AssertAreEqual("pokemart.items.7", 0xCF83, [0], null);
            mapper.AssertAreEqual("pokemart.items.8", 0xCF84, [0], null);
            mapper.AssertAreEqual("pokemart.items.9", 0xCF85, [0], null);
            mapper.AssertAreEqual("pokemart.items.10", 0xCF86, [0], null);
            mapper.AssertAreEqual("rival.name", 0xD34A, [128, 128, 128, 128, 128, 128, 128, 80], "AAAAAAA");
            mapper.AssertAreEqual("rival.finalTeam", 0xD714, [0], "No Team Selected");
            mapper.AssertAreEqual("audio.channel1", 0xC027, [246], 246);
            mapper.AssertAreEqual("audio.channel2", 0xC028, [246], 246);
            mapper.AssertAreEqual("audio.channel3", 0xC029, [0], 0);
            mapper.AssertAreEqual("audio.channel4", 0xC02A, [0], 0);
            mapper.AssertAreEqual("audio.channel5", 0xC02B, [0], 0);
            mapper.AssertAreEqual("audio.channel6", 0xC02C, [0], 0);
            mapper.AssertAreEqual("audio.channel7", 0xC02D, [0], 0);
            mapper.AssertAreEqual("audio.channel8", 0xC02E, [1], 1);
            mapper.AssertAreEqual("audio.currentSound", 0xC002, [0], 0);
            mapper.AssertAreEqual("audio.newSoundId", 0xC0EF, [8], 8);
            mapper.AssertAreEqual("audio.audioBank", 0xC0F0, [8], 8);
            mapper.AssertAreEqual("audio.overworldTrackCurrentMap", 0xD359, [44], null);
            mapper.AssertAreEqual("audio.audioBankCurrentMap", 0xD35A, [131], 131);
            mapper.AssertAreEqual("audio.volume.channel1", 0xC0DF, [133], 133);
            mapper.AssertAreEqual("audio.volume.channel2", 0xC0E0, [64], 64);
            mapper.AssertAreEqual("audio.volume.channel3", 0xC0E1, [0], 0);
            mapper.AssertAreEqual("audio.volume.channel4", 0xC0E2, [180], 180);
            mapper.AssertAreEqual("audio.volume.channel5", 0xC0E3, [196], 196);
            mapper.AssertAreEqual("audio.volume.channel6", 0xC0E4, [32], 32);
            mapper.AssertAreEqual("audio.volume.channel7", 0xC0E5, [0], 0);
            mapper.AssertAreEqual("audio.volume.channel8", 0xC0E6, [1], 1);
            mapper.AssertAreEqual("audio.tempo.music", 0xC0E9, [224, 1], 57345);
            mapper.AssertAreEqual("audio.tempo.sfx", 0xC0EB, [0, 65], 65);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxCount", 0xDA80, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn1", 0xDA81, [255], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn2", 0xDA82, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn3", 0xDA83, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn4", 0xDA84, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn5", 0xDA85, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn6", 0xDA86, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn7", 0xDA87, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn8", 0xDA88, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn9", 0xDA89, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn10", 0xDA8A, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn11", 0xDA8B, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn12", 0xDA8C, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn13", 0xDA8D, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn14", 0xDA8E, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn15", 0xDA8F, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn16", 0xDA90, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn17", 0xDA91, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn18", 0xDA92, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn19", 0xDA93, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn20", 0xDA94, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.nickname", 0xDE06, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.species", 0xDA96, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.pokedexNumber", 0xDA96, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.level", 0xDA99, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.expPoints", 0xDAA4, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.statusCondition", 0xDA9A, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.hp", 0xDA97, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.dvAttack", 0xDAB1, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.dvDefense", 0xDAB1, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.dvSpeed", 0xDAB2, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.dvSpecial", 0xDAB2, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.statExpHp", 0xDAA7, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.statExpAttack", 0xDAA9, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.statExpDefense", 0xDAAB, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.statExpSpeed", 0xDAAD, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.statExpSpecial", 0xDAAF, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.move1", 0xDA9E, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.move2", 0xDA9F, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.move3", 0xDAA0, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.move4", 0xDAA1, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.move1pp", 0xDAB3, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.move2pp", 0xDAB4, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.move3pp", 0xDAB5, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.move4pp", 0xDAB6, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.type1", 0xDA9B, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.type2", 0xDA9C, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.trainerId", 0xDAA2, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.nickname", 0xDE11, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.species", 0xDAB7, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.pokedexNumber", 0xDAB7, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.level", 0xDABA, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.expPoints", 0xDAC5, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.statusCondition", 0xDABB, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.hp", 0xDAB8, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.dvAttack", 0xDAD2, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.dvDefense", 0xDAD2, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.dvSpeed", 0xDAD3, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.dvSpecial", 0xDAD3, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.statExpHp", 0xDAC8, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.statExpAttack", 0xDACA, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.statExpDefense", 0xDACC, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.statExpSpeed", 0xDACE, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.statExpSpecial", 0xDAD0, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.move1", 0xDABF, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.move2", 0xDAC0, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.move3", 0xDAC1, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.move4", 0xDAC2, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.move1pp", 0xDAD4, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.move2pp", 0xDAD5, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.move3pp", 0xDAD6, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.move4pp", 0xDAD7, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.type1", 0xDABC, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.type2", 0xDABD, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.trainerId", 0xDAC3, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.nickname", 0xDE1C, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.species", 0xDAD8, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.pokedexNumber", 0xDAD8, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.level", 0xDADB, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.expPoints", 0xDAE6, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.statusCondition", 0xDADC, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.hp", 0xDAD9, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.dvAttack", 0xDAF3, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.dvDefense", 0xDAF3, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.dvSpeed", 0xDAF4, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.dvSpecial", 0xDAF4, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.statExpHp", 0xDAE9, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.statExpAttack", 0xDAEB, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.statExpDefense", 0xDAED, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.statExpSpeed", 0xDAEF, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.statExpSpecial", 0xDAF1, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.move1", 0xDAE0, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.move2", 0xDAE1, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.move3", 0xDAE2, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.move4", 0xDAE3, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.move1pp", 0xDAF5, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.move2pp", 0xDAF6, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.move3pp", 0xDAF7, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.move4pp", 0xDAF8, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.type1", 0xDADD, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.type2", 0xDADE, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.trainerId", 0xDAE4, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.nickname", 0xDE27, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.species", 0xDAF9, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.pokedexNumber", 0xDAF9, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.level", 0xDAFC, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.expPoints", 0xDB07, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.statusCondition", 0xDAFD, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.hp", 0xDAFA, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.dvAttack", 0xDB14, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.dvDefense", 0xDB14, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.dvSpeed", 0xDB15, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.dvSpecial", 0xDB15, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.statExpHp", 0xDB0A, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.statExpAttack", 0xDB0C, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.statExpDefense", 0xDB0E, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.statExpSpeed", 0xDB10, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.statExpSpecial", 0xDB12, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.move1", 0xDB01, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.move2", 0xDB02, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.move3", 0xDB03, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.move4", 0xDB04, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.move1pp", 0xDB16, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.move2pp", 0xDB17, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.move3pp", 0xDB18, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.move4pp", 0xDB19, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.type1", 0xDAFE, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.type2", 0xDAFF, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.trainerId", 0xDB05, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.nickname", 0xDE32, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.species", 0xDB1A, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.pokedexNumber", 0xDB1A, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.level", 0xDB1D, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.expPoints", 0xDB28, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.statusCondition", 0xDB1E, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.hp", 0xDB1B, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.dvAttack", 0xDB35, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.dvDefense", 0xDB35, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.dvSpeed", 0xDB36, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.dvSpecial", 0xDB36, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.statExpHp", 0xDB2B, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.statExpAttack", 0xDB2D, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.statExpDefense", 0xDB2F, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.statExpSpeed", 0xDB31, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.statExpSpecial", 0xDB33, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.move1", 0xDB22, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.move2", 0xDB23, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.move3", 0xDB24, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.move4", 0xDB25, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.move1pp", 0xDB37, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.move2pp", 0xDB38, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.move3pp", 0xDB39, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.move4pp", 0xDB3A, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.type1", 0xDB1F, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.type2", 0xDB20, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.trainerId", 0xDB26, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.nickname", 0xDE3D, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.species", 0xDB3B, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.pokedexNumber", 0xDB3B, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.level", 0xDB3E, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.expPoints", 0xDB49, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.statusCondition", 0xDB3F, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.hp", 0xDB3C, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.dvAttack", 0xDB56, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.dvDefense", 0xDB56, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.dvSpeed", 0xDB57, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.dvSpecial", 0xDB57, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.statExpHp", 0xDB4C, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.statExpAttack", 0xDB4E, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.statExpDefense", 0xDB50, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.statExpSpeed", 0xDB52, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.statExpSpecial", 0xDB54, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.move1", 0xDB43, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.move2", 0xDB44, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.move3", 0xDB45, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.move4", 0xDB46, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.move1pp", 0xDB58, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.move2pp", 0xDB59, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.move3pp", 0xDB5A, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.move4pp", 0xDB5B, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.type1", 0xDB40, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.type2", 0xDB41, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.trainerId", 0xDB47, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.nickname", 0xDE48, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.species", 0xDB5C, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.pokedexNumber", 0xDB5C, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.level", 0xDB5F, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.expPoints", 0xDB6A, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.statusCondition", 0xDB60, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.hp", 0xDB5D, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.dvAttack", 0xDB77, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.dvDefense", 0xDB77, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.dvSpeed", 0xDB78, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.dvSpecial", 0xDB78, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.statExpHp", 0xDB6D, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.statExpAttack", 0xDB6F, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.statExpDefense", 0xDB71, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.statExpSpeed", 0xDB73, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.statExpSpecial", 0xDB75, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.move1", 0xDB64, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.move2", 0xDB65, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.move3", 0xDB66, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.move4", 0xDB67, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.move1pp", 0xDB79, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.move2pp", 0xDB7A, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.move3pp", 0xDB7B, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.move4pp", 0xDB7C, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.type1", 0xDB61, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.type2", 0xDB62, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.trainerId", 0xDB68, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.nickname", 0xDE53, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.species", 0xDB7D, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.pokedexNumber", 0xDB7D, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.level", 0xDB80, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.expPoints", 0xDB8B, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.statusCondition", 0xDB81, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.hp", 0xDB7E, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.dvAttack", 0xDB98, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.dvDefense", 0xDB98, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.dvSpeed", 0xDB99, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.dvSpecial", 0xDB99, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.statExpHp", 0xDB8E, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.statExpAttack", 0xDB90, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.statExpDefense", 0xDB92, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.statExpSpeed", 0xDB94, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.statExpSpecial", 0xDB96, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.move1", 0xDB85, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.move2", 0xDB86, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.move3", 0xDB87, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.move4", 0xDB88, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.move1pp", 0xDB9A, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.move2pp", 0xDB9B, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.move3pp", 0xDB9C, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.move4pp", 0xDB9D, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.type1", 0xDB82, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.type2", 0xDB83, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.trainerId", 0xDB89, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.nickname", 0xDE5E, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.species", 0xDB9E, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.pokedexNumber", 0xDB9E, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.level", 0xDBA1, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.expPoints", 0xDBAC, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.statusCondition", 0xDBA2, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.hp", 0xDB9F, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.dvAttack", 0xDBB9, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.dvDefense", 0xDBB9, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.dvSpeed", 0xDBBA, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.dvSpecial", 0xDBBA, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.statExpHp", 0xDBAF, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.statExpAttack", 0xDBB1, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.statExpDefense", 0xDBB3, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.statExpSpeed", 0xDBB5, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.statExpSpecial", 0xDBB7, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.move1", 0xDBA6, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.move2", 0xDBA7, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.move3", 0xDBA8, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.move4", 0xDBA9, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.move1pp", 0xDBBB, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.move2pp", 0xDBBC, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.move3pp", 0xDBBD, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.move4pp", 0xDBBE, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.type1", 0xDBA3, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.type2", 0xDBA4, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.trainerId", 0xDBAA, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.nickname", 0xDE69, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.species", 0xDBBF, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.pokedexNumber", 0xDBBF, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.level", 0xDBC2, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.expPoints", 0xDBCD, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.statusCondition", 0xDBC3, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.hp", 0xDBC0, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.dvAttack", 0xDBDA, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.dvDefense", 0xDBDA, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.dvSpeed", 0xDBDB, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.dvSpecial", 0xDBDB, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.statExpHp", 0xDBD0, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.statExpAttack", 0xDBD2, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.statExpDefense", 0xDBD4, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.statExpSpeed", 0xDBD6, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.statExpSpecial", 0xDBD8, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.move1", 0xDBC7, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.move2", 0xDBC8, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.move3", 0xDBC9, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.move4", 0xDBCA, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.move1pp", 0xDBDC, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.move2pp", 0xDBDD, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.move3pp", 0xDBDE, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.move4pp", 0xDBDF, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.type1", 0xDBC4, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.type2", 0xDBC5, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.trainerId", 0xDBCB, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.nickname", 0xDE74, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.species", 0xDBE0, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.pokedexNumber", 0xDBE0, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.level", 0xDBE3, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.expPoints", 0xDBEE, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.statusCondition", 0xDBE4, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.hp", 0xDBE1, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.dvAttack", 0xDBFB, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.dvDefense", 0xDBFB, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.dvSpeed", 0xDBFC, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.dvSpecial", 0xDBFC, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.statExpHp", 0xDBF1, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.statExpAttack", 0xDBF3, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.statExpDefense", 0xDBF5, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.statExpSpeed", 0xDBF7, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.statExpSpecial", 0xDBF9, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.move1", 0xDBE8, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.move2", 0xDBE9, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.move3", 0xDBEA, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.move4", 0xDBEB, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.move1pp", 0xDBFD, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.move2pp", 0xDBFE, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.move3pp", 0xDBFF, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.move4pp", 0xDC00, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.type1", 0xDBE5, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.type2", 0xDBE6, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.trainerId", 0xDBEC, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.nickname", 0xDE7F, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.species", 0xDC01, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.pokedexNumber", 0xDC01, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.level", 0xDC04, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.expPoints", 0xDC0F, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.statusCondition", 0xDC05, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.hp", 0xDC02, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.dvAttack", 0xDC1C, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.dvDefense", 0xDC1C, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.dvSpeed", 0xDC1D, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.dvSpecial", 0xDC1D, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.statExpHp", 0xDC12, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.statExpAttack", 0xDC14, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.statExpDefense", 0xDC16, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.statExpSpeed", 0xDC18, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.statExpSpecial", 0xDC1A, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.move1", 0xDC09, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.move2", 0xDC0A, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.move3", 0xDC0B, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.move4", 0xDC0C, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.move1pp", 0xDC1E, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.move2pp", 0xDC1F, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.move3pp", 0xDC20, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.move4pp", 0xDC21, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.type1", 0xDC06, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.type2", 0xDC07, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.trainerId", 0xDC0D, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.nickname", 0xDE8A, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.species", 0xDC22, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.pokedexNumber", 0xDC22, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.level", 0xDC25, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.expPoints", 0xDC30, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.statusCondition", 0xDC26, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.hp", 0xDC23, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.dvAttack", 0xDC3D, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.dvDefense", 0xDC3D, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.dvSpeed", 0xDC3E, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.dvSpecial", 0xDC3E, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.statExpHp", 0xDC33, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.statExpAttack", 0xDC35, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.statExpDefense", 0xDC37, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.statExpSpeed", 0xDC39, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.statExpSpecial", 0xDC3B, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.move1", 0xDC2A, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.move2", 0xDC2B, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.move3", 0xDC2C, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.move4", 0xDC2D, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.move1pp", 0xDC3F, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.move2pp", 0xDC40, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.move3pp", 0xDC41, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.move4pp", 0xDC42, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.type1", 0xDC27, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.type2", 0xDC28, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.trainerId", 0xDC2E, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.nickname", 0xDE95, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.species", 0xDC43, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.pokedexNumber", 0xDC43, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.level", 0xDC46, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.expPoints", 0xDC51, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.statusCondition", 0xDC47, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.hp", 0xDC44, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.dvAttack", 0xDC5E, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.dvDefense", 0xDC5E, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.dvSpeed", 0xDC5F, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.dvSpecial", 0xDC5F, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.statExpHp", 0xDC54, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.statExpAttack", 0xDC56, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.statExpDefense", 0xDC58, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.statExpSpeed", 0xDC5A, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.statExpSpecial", 0xDC5C, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.move1", 0xDC4B, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.move2", 0xDC4C, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.move3", 0xDC4D, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.move4", 0xDC4E, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.move1pp", 0xDC60, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.move2pp", 0xDC61, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.move3pp", 0xDC62, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.move4pp", 0xDC63, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.type1", 0xDC48, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.type2", 0xDC49, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.trainerId", 0xDC4F, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.nickname", 0xDEA0, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.species", 0xDC64, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.pokedexNumber", 0xDC64, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.level", 0xDC67, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.expPoints", 0xDC72, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.statusCondition", 0xDC68, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.hp", 0xDC65, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.dvAttack", 0xDC7F, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.dvDefense", 0xDC7F, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.dvSpeed", 0xDC80, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.dvSpecial", 0xDC80, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.statExpHp", 0xDC75, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.statExpAttack", 0xDC77, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.statExpDefense", 0xDC79, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.statExpSpeed", 0xDC7B, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.statExpSpecial", 0xDC7D, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.move1", 0xDC6C, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.move2", 0xDC6D, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.move3", 0xDC6E, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.move4", 0xDC6F, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.move1pp", 0xDC81, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.move2pp", 0xDC82, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.move3pp", 0xDC83, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.move4pp", 0xDC84, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.type1", 0xDC69, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.type2", 0xDC6A, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.trainerId", 0xDC70, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.nickname", 0xDEAB, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.species", 0xDC85, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.pokedexNumber", 0xDC85, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.level", 0xDC88, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.expPoints", 0xDC93, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.statusCondition", 0xDC89, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.hp", 0xDC86, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.dvAttack", 0xDCA0, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.dvDefense", 0xDCA0, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.dvSpeed", 0xDCA1, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.dvSpecial", 0xDCA1, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.statExpHp", 0xDC96, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.statExpAttack", 0xDC98, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.statExpDefense", 0xDC9A, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.statExpSpeed", 0xDC9C, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.statExpSpecial", 0xDC9E, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.move1", 0xDC8D, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.move2", 0xDC8E, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.move3", 0xDC8F, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.move4", 0xDC90, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.move1pp", 0xDCA2, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.move2pp", 0xDCA3, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.move3pp", 0xDCA4, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.move4pp", 0xDCA5, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.type1", 0xDC8A, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.type2", 0xDC8B, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.trainerId", 0xDC91, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.nickname", 0xDEB6, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.species", 0xDCA6, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.pokedexNumber", 0xDCA6, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.level", 0xDCA9, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.expPoints", 0xDCB4, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.statusCondition", 0xDCAA, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.hp", 0xDCA7, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.dvAttack", 0xDCC1, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.dvDefense", 0xDCC1, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.dvSpeed", 0xDCC2, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.dvSpecial", 0xDCC2, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.statExpHp", 0xDCB7, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.statExpAttack", 0xDCB9, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.statExpDefense", 0xDCBB, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.statExpSpeed", 0xDCBD, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.statExpSpecial", 0xDCBF, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.move1", 0xDCAE, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.move2", 0xDCAF, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.move3", 0xDCB0, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.move4", 0xDCB1, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.move1pp", 0xDCC3, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.move2pp", 0xDCC4, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.move3pp", 0xDCC5, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.move4pp", 0xDCC6, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.type1", 0xDCAB, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.type2", 0xDCAC, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.trainerId", 0xDCB2, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.nickname", 0xDEC1, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.species", 0xDCC7, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.pokedexNumber", 0xDCC7, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.level", 0xDCCA, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.expPoints", 0xDCD5, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.statusCondition", 0xDCCB, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.hp", 0xDCC8, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.dvAttack", 0xDCE2, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.dvDefense", 0xDCE2, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.dvSpeed", 0xDCE3, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.dvSpecial", 0xDCE3, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.statExpHp", 0xDCD8, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.statExpAttack", 0xDCDA, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.statExpDefense", 0xDCDC, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.statExpSpeed", 0xDCDE, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.statExpSpecial", 0xDCE0, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.move1", 0xDCCF, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.move2", 0xDCD0, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.move3", 0xDCD1, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.move4", 0xDCD2, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.move1pp", 0xDCE4, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.move2pp", 0xDCE5, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.move3pp", 0xDCE6, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.move4pp", 0xDCE7, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.type1", 0xDCCC, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.type2", 0xDCCD, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.trainerId", 0xDCD3, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.nickname", 0xDECC, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.species", 0xDCE8, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.pokedexNumber", 0xDCE8, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.level", 0xDCEB, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.expPoints", 0xDCF6, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.statusCondition", 0xDCEC, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.hp", 0xDCE9, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.dvAttack", 0xDD03, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.dvDefense", 0xDD03, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.dvSpeed", 0xDD04, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.dvSpecial", 0xDD04, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.statExpHp", 0xDCF9, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.statExpAttack", 0xDCFB, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.statExpDefense", 0xDCFD, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.statExpSpeed", 0xDCFF, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.statExpSpecial", 0xDD01, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.move1", 0xDCF0, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.move2", 0xDCF1, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.move3", 0xDCF2, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.move4", 0xDCF3, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.move1pp", 0xDD05, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.move2pp", 0xDD06, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.move3pp", 0xDD07, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.move4pp", 0xDD08, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.type1", 0xDCED, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.type2", 0xDCEE, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.trainerId", 0xDCF4, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.nickname", 0xDED7, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.species", 0xDD09, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.pokedexNumber", 0xDD09, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.level", 0xDD0C, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.expPoints", 0xDD17, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.statusCondition", 0xDD0D, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.hp", 0xDD0A, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.dvAttack", 0xDD24, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.dvDefense", 0xDD24, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.dvSpeed", 0xDD25, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.dvSpecial", 0xDD25, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.statExpHp", 0xDD1A, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.statExpAttack", 0xDD1C, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.statExpDefense", 0xDD1E, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.statExpSpeed", 0xDD20, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.statExpSpecial", 0xDD22, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.move1", 0xDD11, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.move2", 0xDD12, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.move3", 0xDD13, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.move4", 0xDD14, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.move1pp", 0xDD26, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.move2pp", 0xDD27, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.move3pp", 0xDD28, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.move4pp", 0xDD29, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.type1", 0xDD0E, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.type2", 0xDD0F, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.trainerId", 0xDD15, [0, 0], 0);
            mapper.AssertAreEqual("pc.itemStorage.itemCount", 0xD53A, [1], 1);
            mapper.AssertAreEqual("screen.text.prompt", 0xC4F2, [238], "\u25bc");
            mapper.AssertAreEqual("screen.menu.currentItem", 0xCC26, [0], 0);
            mapper.AssertAreEqual("screen.tiles.column1.tile1", 0x9C0D, [127], 127);
            mapper.AssertAreEqual("screen.tiles.column1.tile2", 0x9C2D, [127], 127);
            mapper.AssertAreEqual("screen.tiles.column1.tile3", 0x9C4D, [127], 127);
            mapper.AssertAreEqual("screen.tiles.column1.tile4", 0x9C6D, [127], 127);
            mapper.AssertAreEqual("screen.tiles.column1.tile5", 0x9C8D, [127], 127);
            mapper.AssertAreEqual("screen.tiles.column1.tile6", 0x9CAD, [127], 127);
            mapper.AssertAreEqual("screen.tiles.column1.tile7", 0x9CCD, [127], 127);
            mapper.AssertAreEqual("options.textSpeed1", 0xD355, [3], true);
            mapper.AssertAreEqual("options.textSpeed2", 0xD355, [3], false);
            mapper.AssertAreEqual("options.sound1", 0xD355, [3], false);
            mapper.AssertAreEqual("options.sound2", 0xD355, [3], false);
            mapper.AssertAreEqual("options.battleStyle", 0xD355, [3], false);
            mapper.AssertAreEqual("options.battleAnimations", 0xD355, [3], false);
            mapper.AssertAreEqual("options.soloChallenge", 0xD355, [3], null);
            mapper.AssertAreEqual("settings.textSpeedMid", 0xD355, [3], true);
            mapper.AssertAreEqual("settings.textSpeedSlow", 0xD355, [3], false);
            mapper.AssertAreEqual("settings.battleAnimation", 0xD355, [3], false);
            mapper.AssertAreEqual("settings.battleStyle", 0xD355, [3], false);
            mapper.AssertAreEqual("gameTime.hours", 0xDA40, [0, 0], 0);
            mapper.AssertAreEqual("gameTime.minutes", 0xDA42, [0, 13], 13);
            mapper.AssertAreEqual("gameTime.seconds", 0xDA44, [25], 25);
            mapper.AssertAreEqual("gameTime.frames", 0xDA45, [33], 33);
            mapper.AssertAreEqual("patch.time.frameCount", 0xDBF0, [0, 0, 0, 0], 0);
            mapper.AssertAreEqual("patch.time.oWFrameCount", 0xDBE4, [0, 0, 0, 0], 0);
            mapper.AssertAreEqual("patch.time.battleFrameCount", 0xDBE8, [0, 0, 0, 0], 0);
            mapper.AssertAreEqual("patch.time.menuFrameCount", 0xDBEC, [0, 0, 0, 0], 0);
            mapper.AssertAreEqual("patch.time.introsFrameCount", 0xDBF0, [0, 0, 0, 0], 0);
            mapper.AssertAreEqual("patch.saves.saveCount", 0xDC06, [0, 0], 0);
            mapper.AssertAreEqual("patch.saves.reloadCount", 0xDC08, [0, 0], 0);
            mapper.AssertAreEqual("patch.steps.stepsCount", 0xDBF4, [0, 0, 0, 0], 0);
            mapper.AssertAreEqual("patch.steps.stepsCountWalk", 0xDBF8, [0, 0, 0, 0], 0);
            mapper.AssertAreEqual("patch.steps.stepsCountBike", 0xDBFC, [0, 0, 0, 0], 0);
            mapper.AssertAreEqual("patch.steps.stepsCountSurf", 0xDC00, [0, 0, 0, 0], 0);
            mapper.AssertAreEqual("patch.steps.bonks", 0xDC04, [0, 0], 0);
            mapper.AssertAreEqual("patch.battles.trainerBattles", 0xDC1E, [0, 0], 0);
            mapper.AssertAreEqual("patch.battles.wildBattles", 0xDC20, [0, 0], 0);
            mapper.AssertAreEqual("patch.battles.battlesFled", 0xDC2E, [0, 0], 0);
            mapper.AssertAreEqual("patch.battles.failedRuns", 0xDC30, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.turns.battleTurns", 0xDC22, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.turns.playerTurns", 0xDC24, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.turns.enemyTurns", 0xDC26, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.damage.totalDamageDealt", 0xDC36, [0, 0, 0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.damage.actualDamageDealt", 0xDC3E, [0, 0, 0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.damage.totalDamageTaken", 0xDC3A, [0, 0, 0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.damage.actualDamageTaken", 0xDC42, [0, 0, 0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.ownMovesHit", 0xDC46, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.enemyMovesHit", 0xDC48, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.ownMovesMissed", 0xDC4A, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.enemyMovesMissed", 0xDC4C, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.PlayerMovesStatus", 0xDC4E, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.EnemyMovesStatus", 0xDC50, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.PlayerMovesSpecial", 0xDC52, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.EnemyMovesSpecial", 0xDC54, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.PlayerMoves0xE", 0xDC56, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.PlayerMoves4xR", 0xDC58, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.PlayerMoves2xR", 0xDC5A, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.PlayerMoves1xE", 0xDC5C, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.PlayerMoves2xE", 0xDC5E, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.PlayerMoves4xE", 0xDC60, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.EnemyMoves0xE", 0xDC62, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.EnemyMoves4xR", 0xDC64, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.EnemyMoves2xR", 0xDC66, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.EnemyMoves1xE", 0xDC68, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.EnemyMoves2xE", 0xDC6A, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.EnemyMoves4xE", 0xDC6C, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.criticalsDealt", 0xDC6E, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.criticalsTaken", 0xDC70, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.oHKOsDealt", 0xDC72, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.oHKOsTaken", 0xDC74, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.enemyBecameConfused", 0xDC76, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.wasConfused", 0xDC78, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.enemyWasParalyzed", 0xDC7A, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.wasParalyzed", 0xDC7C, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.enemyWasBurned", 0xDC7E, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.wasBurned", 0xDC80, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.enemyWasFrozen", 0xDC82, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.wasFrozen", 0xDC84, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.enemyWasPoisoned", 0xDC86, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.wasPoisoned", 0xDC88, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.enemyWasPoisonedBadly", 0xDC8A, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.wasPoisonedBadly", 0xDC8C, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.enemyFellAsleep", 0xDC8E, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.fellAsleep", 0xDC90, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.playerTurnsConfused", 0xDC92, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.enemyTurnsConfused", 0xDC94, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.playerTurnsConfusedHitSelf", 0xDC96, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.enemyTurnsConfusedHitSelf", 0xDC98, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.playerTurnsParalyzed", 0xDC9A, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.enemyTurnsParalyzed", 0xDC9C, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.playerTurnsParalyzedFully", 0xDC9E, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.enemyTurnsParalyzedFully", 0xDCA0, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.PlayerTurnsAsleep", 0xDCA2, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.EnemyTurnsAsleep", 0xDCA4, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.switchout", 0xDC2C, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.experienceGained", 0xDC32, [0, 0, 0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.playerPokemonFainted", 0xDCA6, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.enemyPokemonFainted", 0xDCA8, [0, 0], 0);
            mapper.AssertAreEqual("patch.money.moneyMade", 0xDC0A, [0, 0, 0, 0], 0);
            mapper.AssertAreEqual("patch.money.moneySpent", 0xDC0E, [0, 0, 0, 0], 0);
            mapper.AssertAreEqual("patch.money.moneyLost", 0xDC12, [0, 0, 0, 0], 0);
            mapper.AssertAreEqual("patch.items.itemsPickedUp", 0xDC16, [0, 0], 0);
            mapper.AssertAreEqual("patch.items.itemsBought", 0xDC18, [0, 0], 0);
            mapper.AssertAreEqual("patch.items.itemsSold", 0xDC1A, [0, 0], 0);
            mapper.AssertAreEqual("patch.catching.ballsThrown", 0xDC28, [0, 0], 0);
            mapper.AssertAreEqual("patch.catching.pokemonCaughtInBalls", 0xDC2A, [0, 0], 0);
            mapper.AssertAreEqual("patch.movesLearnt", 0xDC1C, [0, 0], 0);
            mapper.AssertAreEqual("meta.generation", "1");
            mapper.AssertAreEqual("meta.gameName", "Red and Blue");
            mapper.AssertAreEqual("meta.gameType", "Originals");
            mapper.AssertAreEqual("meta.mapperType", "Deprecated");
            mapper.AssertAreEqual("meta.state", "From Battle");
        }

    }
}

