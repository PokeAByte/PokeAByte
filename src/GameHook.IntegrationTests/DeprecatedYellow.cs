using Microsoft.Extensions.Logging;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using OpenAPI.GameHook;
using System.Threading.Tasks;

namespace GameHook.IntegrationTests
{
    [TestClass]
    public class Deprecated_Pokemon_Yellow : BaseTest
    {

        [TestMethod]
        public async Task All_Properties()
        {
            await Load_GB_PokemonYellowDeprecated(8);

            var mapper = await GameHookClient.GetMapperAsync();

            mapper.AssertAreEqual("player.name", 0xD157, [146, 130, 142, 147, 147, 80, 146, 135, 128, 150, 141], "SCOTT");
            mapper.AssertAreEqual("player.playerId", 0xD358, [178, 22], 45590);
            mapper.AssertAreEqual("player.teamCount", 0xD162, [1], 1);
            mapper.AssertAreEqual("player.team.0.nickname", 0xD2B4, [128, 132, 145, 142, 131, 128, 130, 147, 152, 139, 80], "AERODACTYL");
            mapper.AssertAreEqual("player.team.0.species", 0xD16A, [171], "Aerodactyl");
            mapper.AssertAreEqual("player.team.0.pokedexNumber", 0xD16A, [171], "142");
            mapper.AssertAreEqual("player.team.0.level", 0xD18B, [5], 5);
            mapper.AssertAreEqual("player.team.0.expPoints", 0xD178, [0, 0, 156], 156);
            mapper.AssertAreEqual("player.team.0.statusCondition", 0xD16E, [0], " ");
            mapper.AssertAreEqual("player.team.0.maxHp", 0xD18C, [0, 23], 23);
            mapper.AssertAreEqual("player.team.0.hp", 0xD16B, [0, 23], 23);
            mapper.AssertAreEqual("player.team.0.attack", 0xD18E, [0, 16], 16);
            mapper.AssertAreEqual("player.team.0.defense", 0xD190, [0, 11], 11);
            mapper.AssertAreEqual("player.team.0.speed", 0xD192, [0, 18], 18);
            mapper.AssertAreEqual("player.team.0.special", 0xD194, [0, 11], 11);
            mapper.AssertAreEqual("player.team.0.dvAttack", 0xD185, [228], 14);
            mapper.AssertAreEqual("player.team.0.dvDefense", 0xD185, [228], 4);
            mapper.AssertAreEqual("player.team.0.dvSpeed", 0xD186, [105], 6);
            mapper.AssertAreEqual("player.team.0.dvSpecial", 0xD186, [105], 9);
            mapper.AssertAreEqual("player.team.0.move1", 0xD172, [17], "WING ATTACK");
            mapper.AssertAreEqual("player.team.0.move2", 0xD173, [97], "AGILITY");
            mapper.AssertAreEqual("player.team.0.move3", 0xD174, [0], null);
            mapper.AssertAreEqual("player.team.0.move4", 0xD175, [0], null);
            mapper.AssertAreEqual("player.team.0.move1pp", 0xD187, [35], 35);
            mapper.AssertAreEqual("player.team.0.move2pp", 0xD188, [30], 30);
            mapper.AssertAreEqual("player.team.0.move3pp", 0xD189, [0], 0);
            mapper.AssertAreEqual("player.team.0.move4pp", 0xD18A, [0], 0);
            mapper.AssertAreEqual("player.team.0.move1ppUp", 0xD187, [35], 0);
            mapper.AssertAreEqual("player.team.0.move2ppUp", 0xD188, [30], 0);
            mapper.AssertAreEqual("player.team.0.move3ppUp", 0xD189, [0], 0);
            mapper.AssertAreEqual("player.team.0.move4ppUp", 0xD18A, [0], 0);
            mapper.AssertAreEqual("player.team.0.statExpHp", 0xD17B, [0, 0], 0);
            mapper.AssertAreEqual("player.team.0.statExpAttack", 0xD17D, [0, 0], 0);
            mapper.AssertAreEqual("player.team.0.statExpDefense", 0xD17F, [0, 0], 0);
            mapper.AssertAreEqual("player.team.0.statExpSpeed", 0xD181, [0, 0], 0);
            mapper.AssertAreEqual("player.team.0.statExpSpecial", 0xD183, [0, 0], 0);
            mapper.AssertAreEqual("player.team.0.type1", 0xD16F, [5], "Rock");
            mapper.AssertAreEqual("player.team.0.type2", 0xD170, [2], "Flying");
            mapper.AssertAreEqual("player.team.0.trainerId", 0xD176, [178, 22], 45590);
            mapper.AssertAreEqual("player.team.0.catchRate", 0xD171, [163], 163);
            mapper.AssertAreEqual("player.team.1.nickname", 0xD2BF, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("player.team.1.species", 0xD196, [0], null);
            mapper.AssertAreEqual("player.team.1.pokedexNumber", 0xD196, [0], null);
            mapper.AssertAreEqual("player.team.1.level", 0xD1B7, [0], 0);
            mapper.AssertAreEqual("player.team.1.expPoints", 0xD1A4, [0, 0, 0], 0);
            mapper.AssertAreEqual("player.team.1.statusCondition", 0xD19A, [0], " ");
            mapper.AssertAreEqual("player.team.1.maxHp", 0xD1B8, [0, 0], 0);
            mapper.AssertAreEqual("player.team.1.hp", 0xD197, [0, 0], 0);
            mapper.AssertAreEqual("player.team.1.attack", 0xD1BA, [0, 0], 0);
            mapper.AssertAreEqual("player.team.1.defense", 0xD1BC, [0, 0], 0);
            mapper.AssertAreEqual("player.team.1.speed", 0xD1BE, [0, 0], 0);
            mapper.AssertAreEqual("player.team.1.special", 0xD1C0, [0, 0], 0);
            mapper.AssertAreEqual("player.team.1.dvAttack", 0xD1B1, [0], 0);
            mapper.AssertAreEqual("player.team.1.dvDefense", 0xD1B1, [0], 0);
            mapper.AssertAreEqual("player.team.1.dvSpeed", 0xD1B2, [0], 0);
            mapper.AssertAreEqual("player.team.1.dvSpecial", 0xD1B2, [0], 0);
            mapper.AssertAreEqual("player.team.1.move1", 0xD19E, [0], null);
            mapper.AssertAreEqual("player.team.1.move2", 0xD19F, [0], null);
            mapper.AssertAreEqual("player.team.1.move3", 0xD1A0, [0], null);
            mapper.AssertAreEqual("player.team.1.move4", 0xD1A1, [0], null);
            mapper.AssertAreEqual("player.team.1.move1pp", 0xD1B3, [0], 0);
            mapper.AssertAreEqual("player.team.1.move2pp", 0xD1B4, [0], 0);
            mapper.AssertAreEqual("player.team.1.move3pp", 0xD1B5, [0], 0);
            mapper.AssertAreEqual("player.team.1.move4pp", 0xD1B6, [0], 0);
            mapper.AssertAreEqual("player.team.1.move1ppUp", 0xD1B3, [0], 0);
            mapper.AssertAreEqual("player.team.1.move2ppUp", 0xD1B4, [0], 0);
            mapper.AssertAreEqual("player.team.1.move3ppUp", 0xD1B5, [0], 0);
            mapper.AssertAreEqual("player.team.1.move4ppUp", 0xD1B6, [0], 0);
            mapper.AssertAreEqual("player.team.1.statExpHp", 0xD1A7, [0, 0], 0);
            mapper.AssertAreEqual("player.team.1.statExpAttack", 0xD1A9, [0, 0], 0);
            mapper.AssertAreEqual("player.team.1.statExpDefense", 0xD1AB, [0, 0], 0);
            mapper.AssertAreEqual("player.team.1.statExpSpeed", 0xD1AD, [0, 0], 0);
            mapper.AssertAreEqual("player.team.1.statExpSpecial", 0xD1AF, [0, 0], 0);
            mapper.AssertAreEqual("player.team.1.type1", 0xD19B, [0], "Normal");
            mapper.AssertAreEqual("player.team.1.type2", 0xD19C, [0], "Normal");
            mapper.AssertAreEqual("player.team.1.trainerId", 0xD1A2, [0, 0], 0);
            mapper.AssertAreEqual("player.team.1.catchRate", 0xD19D, [0], 0);
            mapper.AssertAreEqual("player.team.2.nickname", 0xD2CA, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("player.team.2.species", 0xD1C2, [0], null);
            mapper.AssertAreEqual("player.team.2.pokedexNumber", 0xD1C2, [0], null);
            mapper.AssertAreEqual("player.team.2.level", 0xD1E3, [0], 0);
            mapper.AssertAreEqual("player.team.2.expPoints", 0xD1D0, [0, 0, 0], 0);
            mapper.AssertAreEqual("player.team.2.statusCondition", 0xD1C6, [0], " ");
            mapper.AssertAreEqual("player.team.2.maxHp", 0xD1E4, [0, 0], 0);
            mapper.AssertAreEqual("player.team.2.hp", 0xD1C3, [0, 0], 0);
            mapper.AssertAreEqual("player.team.2.attack", 0xD1E6, [0, 0], 0);
            mapper.AssertAreEqual("player.team.2.defense", 0xD1E8, [0, 0], 0);
            mapper.AssertAreEqual("player.team.2.speed", 0xD1EA, [0, 0], 0);
            mapper.AssertAreEqual("player.team.2.special", 0xD1EC, [0, 0], 0);
            mapper.AssertAreEqual("player.team.2.dvAttack", 0xD1DD, [0], 0);
            mapper.AssertAreEqual("player.team.2.dvDefense", 0xD1DD, [0], 0);
            mapper.AssertAreEqual("player.team.2.dvSpeed", 0xD1DE, [0], 0);
            mapper.AssertAreEqual("player.team.2.dvSpecial", 0xD1DE, [0], 0);
            mapper.AssertAreEqual("player.team.2.move1", 0xD1CA, [0], null);
            mapper.AssertAreEqual("player.team.2.move2", 0xD1CB, [0], null);
            mapper.AssertAreEqual("player.team.2.move3", 0xD1CC, [0], null);
            mapper.AssertAreEqual("player.team.2.move4", 0xD1CD, [0], null);
            mapper.AssertAreEqual("player.team.2.move1pp", 0xD1DF, [0], 0);
            mapper.AssertAreEqual("player.team.2.move2pp", 0xD1E0, [0], 0);
            mapper.AssertAreEqual("player.team.2.move3pp", 0xD1E1, [0], 0);
            mapper.AssertAreEqual("player.team.2.move4pp", 0xD1E2, [0], 0);
            mapper.AssertAreEqual("player.team.2.move1ppUp", 0xD1DF, [0], 0);
            mapper.AssertAreEqual("player.team.2.move2ppUp", 0xD1E0, [0], 0);
            mapper.AssertAreEqual("player.team.2.move3ppUp", 0xD1E1, [0], 0);
            mapper.AssertAreEqual("player.team.2.move4ppUp", 0xD1E2, [0], 0);
            mapper.AssertAreEqual("player.team.2.statExpHp", 0xD1D3, [0, 0], 0);
            mapper.AssertAreEqual("player.team.2.statExpAttack", 0xD1D5, [0, 0], 0);
            mapper.AssertAreEqual("player.team.2.statExpDefense", 0xD1D7, [0, 0], 0);
            mapper.AssertAreEqual("player.team.2.statExpSpeed", 0xD1D9, [0, 0], 0);
            mapper.AssertAreEqual("player.team.2.statExpSpecial", 0xD1DB, [0, 0], 0);
            mapper.AssertAreEqual("player.team.2.type1", 0xD1C7, [0], "Normal");
            mapper.AssertAreEqual("player.team.2.type2", 0xD1C8, [0], "Normal");
            mapper.AssertAreEqual("player.team.2.trainerId", 0xD1CE, [0, 0], 0);
            mapper.AssertAreEqual("player.team.2.catchRate", 0xD1C9, [0], 0);
            mapper.AssertAreEqual("player.team.3.nickname", 0xD2D5, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("player.team.3.species", 0xD1EE, [0], null);
            mapper.AssertAreEqual("player.team.3.pokedexNumber", 0xD1EE, [0], null);
            mapper.AssertAreEqual("player.team.3.level", 0xD20F, [0], 0);
            mapper.AssertAreEqual("player.team.3.expPoints", 0xD1FC, [0, 0, 0], 0);
            mapper.AssertAreEqual("player.team.3.statusCondition", 0xD1F2, [0], " ");
            mapper.AssertAreEqual("player.team.3.maxHp", 0xD210, [0, 0], 0);
            mapper.AssertAreEqual("player.team.3.hp", 0xD1EF, [0, 0], 0);
            mapper.AssertAreEqual("player.team.3.attack", 0xD212, [0, 0], 0);
            mapper.AssertAreEqual("player.team.3.defense", 0xD214, [0, 0], 0);
            mapper.AssertAreEqual("player.team.3.speed", 0xD216, [0, 0], 0);
            mapper.AssertAreEqual("player.team.3.special", 0xD218, [0, 0], 0);
            mapper.AssertAreEqual("player.team.3.dvAttack", 0xD209, [0], 0);
            mapper.AssertAreEqual("player.team.3.dvDefense", 0xD209, [0], 0);
            mapper.AssertAreEqual("player.team.3.dvSpeed", 0xD20A, [0], 0);
            mapper.AssertAreEqual("player.team.3.dvSpecial", 0xD20A, [0], 0);
            mapper.AssertAreEqual("player.team.3.move1", 0xD1F6, [0], null);
            mapper.AssertAreEqual("player.team.3.move2", 0xD1F7, [0], null);
            mapper.AssertAreEqual("player.team.3.move3", 0xD1F8, [0], null);
            mapper.AssertAreEqual("player.team.3.move4", 0xD1F9, [0], null);
            mapper.AssertAreEqual("player.team.3.move1pp", 0xD20B, [0], 0);
            mapper.AssertAreEqual("player.team.3.move2pp", 0xD20C, [0], 0);
            mapper.AssertAreEqual("player.team.3.move3pp", 0xD20D, [0], 0);
            mapper.AssertAreEqual("player.team.3.move4pp", 0xD20E, [0], 0);
            mapper.AssertAreEqual("player.team.3.move1ppUp", 0xD20B, [0], 0);
            mapper.AssertAreEqual("player.team.3.move2ppUp", 0xD20C, [0], 0);
            mapper.AssertAreEqual("player.team.3.move3ppUp", 0xD20D, [0], 0);
            mapper.AssertAreEqual("player.team.3.move4ppUp", 0xD20E, [0], 0);
            mapper.AssertAreEqual("player.team.3.statExpHp", 0xD1FF, [0, 0], 0);
            mapper.AssertAreEqual("player.team.3.statExpAttack", 0xD201, [0, 0], 0);
            mapper.AssertAreEqual("player.team.3.statExpDefense", 0xD203, [0, 0], 0);
            mapper.AssertAreEqual("player.team.3.statExpSpeed", 0xD205, [0, 0], 0);
            mapper.AssertAreEqual("player.team.3.statExpSpecial", 0xD207, [0, 0], 0);
            mapper.AssertAreEqual("player.team.3.type1", 0xD1F3, [0], "Normal");
            mapper.AssertAreEqual("player.team.3.type2", 0xD1F4, [0], "Normal");
            mapper.AssertAreEqual("player.team.3.trainerId", 0xD1FA, [0, 0], 0);
            mapper.AssertAreEqual("player.team.3.catchRate", 0xD1F5, [0], 0);
            mapper.AssertAreEqual("player.team.4.nickname", 0xD2E0, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("player.team.4.species", 0xD21A, [0], null);
            mapper.AssertAreEqual("player.team.4.pokedexNumber", 0xD21A, [0], null);
            mapper.AssertAreEqual("player.team.4.level", 0xD23B, [0], 0);
            mapper.AssertAreEqual("player.team.4.expPoints", 0xD228, [0, 0, 0], 0);
            mapper.AssertAreEqual("player.team.4.statusCondition", 0xD21E, [0], " ");
            mapper.AssertAreEqual("player.team.4.maxHp", 0xD23C, [0, 0], 0);
            mapper.AssertAreEqual("player.team.4.hp", 0xD21B, [0, 0], 0);
            mapper.AssertAreEqual("player.team.4.attack", 0xD23E, [0, 0], 0);
            mapper.AssertAreEqual("player.team.4.defense", 0xD240, [0, 0], 0);
            mapper.AssertAreEqual("player.team.4.speed", 0xD242, [0, 0], 0);
            mapper.AssertAreEqual("player.team.4.special", 0xD244, [0, 0], 0);
            mapper.AssertAreEqual("player.team.4.dvAttack", 0xD235, [0], 0);
            mapper.AssertAreEqual("player.team.4.dvDefense", 0xD235, [0], 0);
            mapper.AssertAreEqual("player.team.4.dvSpeed", 0xD236, [0], 0);
            mapper.AssertAreEqual("player.team.4.dvSpecial", 0xD236, [0], 0);
            mapper.AssertAreEqual("player.team.4.move1", 0xD222, [0], null);
            mapper.AssertAreEqual("player.team.4.move2", 0xD223, [0], null);
            mapper.AssertAreEqual("player.team.4.move3", 0xD224, [0], null);
            mapper.AssertAreEqual("player.team.4.move4", 0xD225, [0], null);
            mapper.AssertAreEqual("player.team.4.move1pp", 0xD237, [0], 0);
            mapper.AssertAreEqual("player.team.4.move2pp", 0xD238, [0], 0);
            mapper.AssertAreEqual("player.team.4.move3pp", 0xD239, [0], 0);
            mapper.AssertAreEqual("player.team.4.move4pp", 0xD23A, [0], 0);
            mapper.AssertAreEqual("player.team.4.move1ppUp", 0xD237, [0], 0);
            mapper.AssertAreEqual("player.team.4.move2ppUp", 0xD238, [0], 0);
            mapper.AssertAreEqual("player.team.4.move3ppUp", 0xD239, [0], 0);
            mapper.AssertAreEqual("player.team.4.move4ppUp", 0xD23A, [0], 0);
            mapper.AssertAreEqual("player.team.4.statExpHp", 0xD22B, [0, 0], 0);
            mapper.AssertAreEqual("player.team.4.statExpAttack", 0xD22D, [0, 0], 0);
            mapper.AssertAreEqual("player.team.4.statExpDefense", 0xD22F, [0, 0], 0);
            mapper.AssertAreEqual("player.team.4.statExpSpeed", 0xD231, [0, 0], 0);
            mapper.AssertAreEqual("player.team.4.statExpSpecial", 0xD233, [0, 0], 0);
            mapper.AssertAreEqual("player.team.4.type1", 0xD21F, [0], "Normal");
            mapper.AssertAreEqual("player.team.4.type2", 0xD220, [0], "Normal");
            mapper.AssertAreEqual("player.team.4.trainerId", 0xD226, [0, 0], 0);
            mapper.AssertAreEqual("player.team.4.catchRate", 0xD221, [0], 0);
            mapper.AssertAreEqual("player.team.5.nickname", 0xD2EB, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("player.team.5.species", 0xD246, [0], null);
            mapper.AssertAreEqual("player.team.5.pokedexNumber", 0xD246, [0], null);
            mapper.AssertAreEqual("player.team.5.level", 0xD267, [0], 0);
            mapper.AssertAreEqual("player.team.5.expPoints", 0xD254, [0, 0, 0], 0);
            mapper.AssertAreEqual("player.team.5.statusCondition", 0xD24A, [0], " ");
            mapper.AssertAreEqual("player.team.5.maxHp", 0xD268, [0, 0], 0);
            mapper.AssertAreEqual("player.team.5.hp", 0xD247, [0, 0], 0);
            mapper.AssertAreEqual("player.team.5.attack", 0xD26A, [0, 0], 0);
            mapper.AssertAreEqual("player.team.5.defense", 0xD26C, [0, 0], 0);
            mapper.AssertAreEqual("player.team.5.speed", 0xD26E, [0, 0], 0);
            mapper.AssertAreEqual("player.team.5.special", 0xD270, [0, 0], 0);
            mapper.AssertAreEqual("player.team.5.dvAttack", 0xD261, [0], 0);
            mapper.AssertAreEqual("player.team.5.dvDefense", 0xD261, [0], 0);
            mapper.AssertAreEqual("player.team.5.dvSpeed", 0xD262, [0], 0);
            mapper.AssertAreEqual("player.team.5.dvSpecial", 0xD262, [0], 0);
            mapper.AssertAreEqual("player.team.5.move1", 0xD24E, [0], null);
            mapper.AssertAreEqual("player.team.5.move2", 0xD24F, [0], null);
            mapper.AssertAreEqual("player.team.5.move3", 0xD250, [0], null);
            mapper.AssertAreEqual("player.team.5.move4", 0xD251, [0], null);
            mapper.AssertAreEqual("player.team.5.move1pp", 0xD263, [0], 0);
            mapper.AssertAreEqual("player.team.5.move2pp", 0xD264, [0], 0);
            mapper.AssertAreEqual("player.team.5.move3pp", 0xD265, [0], 0);
            mapper.AssertAreEqual("player.team.5.move4pp", 0xD266, [0], 0);
            mapper.AssertAreEqual("player.team.5.move1ppUp", 0xD263, [0], 0);
            mapper.AssertAreEqual("player.team.5.move2ppUp", 0xD264, [0], 0);
            mapper.AssertAreEqual("player.team.5.move3ppUp", 0xD265, [0], 0);
            mapper.AssertAreEqual("player.team.5.move4ppUp", 0xD266, [0], 0);
            mapper.AssertAreEqual("player.team.5.statExpHp", 0xD257, [0, 0], 0);
            mapper.AssertAreEqual("player.team.5.statExpAttack", 0xD259, [0, 0], 0);
            mapper.AssertAreEqual("player.team.5.statExpDefense", 0xD25B, [0, 0], 0);
            mapper.AssertAreEqual("player.team.5.statExpSpeed", 0xD25D, [0, 0], 0);
            mapper.AssertAreEqual("player.team.5.statExpSpecial", 0xD25F, [0, 0], 0);
            mapper.AssertAreEqual("player.team.5.type1", 0xD24B, [0], "Normal");
            mapper.AssertAreEqual("player.team.5.type2", 0xD24C, [0], "Normal");
            mapper.AssertAreEqual("player.team.5.trainerId", 0xD252, [0, 0], 0);
            mapper.AssertAreEqual("player.team.5.catchRate", 0xD24D, [0], 0);
            mapper.AssertAreEqual("player.itemCount", 0xD31C, [0], 0);
            mapper.AssertAreEqual("player.items.0.item", 0xD31D, [255], null);
            mapper.AssertAreEqual("player.items.0.quantity", 0xD31E, [0], 0);
            mapper.AssertAreEqual("player.items.1.item", 0xD31F, [0], null);
            mapper.AssertAreEqual("player.items.1.quantity", 0xD320, [0], 0);
            mapper.AssertAreEqual("player.items.2.item", 0xD321, [0], null);
            mapper.AssertAreEqual("player.items.2.quantity", 0xD322, [0], 0);
            mapper.AssertAreEqual("player.items.3.item", 0xD323, [0], null);
            mapper.AssertAreEqual("player.items.3.quantity", 0xD324, [0], 0);
            mapper.AssertAreEqual("player.items.4.item", 0xD325, [0], null);
            mapper.AssertAreEqual("player.items.4.quantity", 0xD326, [0], 0);
            mapper.AssertAreEqual("player.items.5.item", 0xD327, [0], null);
            mapper.AssertAreEqual("player.items.5.quantity", 0xD328, [0], 0);
            mapper.AssertAreEqual("player.items.6.item", 0xD329, [0], null);
            mapper.AssertAreEqual("player.items.6.quantity", 0xD32A, [0], 0);
            mapper.AssertAreEqual("player.items.7.item", 0xD32B, [0], null);
            mapper.AssertAreEqual("player.items.7.quantity", 0xD32C, [0], 0);
            mapper.AssertAreEqual("player.items.8.item", 0xD32D, [0], null);
            mapper.AssertAreEqual("player.items.8.quantity", 0xD32E, [0], 0);
            mapper.AssertAreEqual("player.items.9.item", 0xD32F, [0], null);
            mapper.AssertAreEqual("player.items.9.quantity", 0xD330, [0], 0);
            mapper.AssertAreEqual("player.items.10.item", 0xD331, [0], null);
            mapper.AssertAreEqual("player.items.10.quantity", 0xD332, [0], 0);
            mapper.AssertAreEqual("player.items.11.item", 0xD333, [0], null);
            mapper.AssertAreEqual("player.items.11.quantity", 0xD334, [0], 0);
            mapper.AssertAreEqual("player.items.12.item", 0xD335, [0], null);
            mapper.AssertAreEqual("player.items.12.quantity", 0xD336, [0], 0);
            mapper.AssertAreEqual("player.items.13.item", 0xD337, [0], null);
            mapper.AssertAreEqual("player.items.13.quantity", 0xD338, [0], 0);
            mapper.AssertAreEqual("player.items.14.item", 0xD339, [0], null);
            mapper.AssertAreEqual("player.items.14.quantity", 0xD33A, [0], 0);
            mapper.AssertAreEqual("player.items.15.item", 0xD33B, [0], null);
            mapper.AssertAreEqual("player.items.15.quantity", 0xD33C, [0], 0);
            mapper.AssertAreEqual("player.items.16.item", 0xD33D, [0], null);
            mapper.AssertAreEqual("player.items.16.quantity", 0xD33E, [0], 0);
            mapper.AssertAreEqual("player.items.17.item", 0xD33F, [0], null);
            mapper.AssertAreEqual("player.items.17.quantity", 0xD340, [0], 0);
            mapper.AssertAreEqual("player.items.18.item", 0xD341, [0], null);
            mapper.AssertAreEqual("player.items.18.quantity", 0xD342, [0], 0);
            mapper.AssertAreEqual("player.items.19.item", 0xD343, [0], null);
            mapper.AssertAreEqual("player.items.19.quantity", 0xD344, [0], 0);
            mapper.AssertAreEqual("player.money", 0xD346, [0, 48, 0], 3000);
            mapper.AssertAreEqual("player.gameCornerCoins", 0xD5A3, [0, 0], 0);
            // mapper.AssertAreEqual("player.pokedexSeen", 0xD309, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 32, 0], (bool[])[false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false]);
            // mapper.AssertAreEqual("player.pokedexCaught", 0xD2F6, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0], (bool[])[false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false]);
            mapper.AssertAreEqual("player.badges.badge1", 0xD355, [0], false);
            mapper.AssertAreEqual("player.badges.badge2", 0xD355, [0], false);
            mapper.AssertAreEqual("player.badges.badge3", 0xD355, [0], false);
            mapper.AssertAreEqual("player.badges.badge4", 0xD355, [0], false);
            mapper.AssertAreEqual("player.badges.badge5", 0xD355, [0], false);
            mapper.AssertAreEqual("player.badges.badge6", 0xD355, [0], false);
            mapper.AssertAreEqual("player.badges.badge7", 0xD355, [0], false);
            mapper.AssertAreEqual("player.badges.badge8", 0xD355, [0], false);
            mapper.AssertAreEqual("player.starterPokemon", 0xD716, [171], "Aerodactyl");
            mapper.AssertAreEqual("player.joypadSimulation", 0xCD38, [0], false);
            mapper.AssertAreEqual("player.joypadIgnore", 0xCD6B, [0], 0);
            mapper.AssertAreEqual("overworld.map", 0xD35D, [40], "Pallet Town - Oak's Lab");
            mapper.AssertAreEqual("overworld.y", 0xD360, [6], 6);
            mapper.AssertAreEqual("overworld.x", 0xD361, [5], 5);
            mapper.AssertAreEqual("overworld.encounterRate", 0xD886, [0], 0);
            mapper.AssertAreEqual("overworld.encounters.common.0.level", 0xD887, [130], 130);
            mapper.AssertAreEqual("overworld.encounters.common.0.pokemon", 0xD888, [142], "Clefable");
            mapper.AssertAreEqual("overworld.encounters.common.1.level", 0xD889, [147], 147);
            mapper.AssertAreEqual("overworld.encounters.common.1.pokemon", 0xD88A, [147], "Haunter");
            mapper.AssertAreEqual("overworld.encounters.common.2.level", 0xD88B, [80], 80);
            mapper.AssertAreEqual("overworld.encounters.common.2.pokemon", 0xD88C, [146], null);
            mapper.AssertAreEqual("overworld.encounters.common.3.level", 0xD88D, [135], 135);
            mapper.AssertAreEqual("overworld.encounters.common.3.pokemon", 0xD88E, [128], "Golduck");
            //mapper.AssertAreEqual("overworld.encounters.common.4.level", 0xD88F, [150], 150);
            //mapper.AssertAreEqual("overworld.encounters.common.4.pokemon", 0xD890, [141], "Electrode");
            //mapper.AssertAreEqual("overworld.encounters.uncommon.0.level", 0xD889, [147], 147);
            //mapper.AssertAreEqual("overworld.encounters.uncommon.0.pokemon", 0xD88A, [147], "Haunter");
            mapper.AssertAreEqual("overworld.encounters.uncommon.1.level", 0xD891, [0], 0);
            mapper.AssertAreEqual("overworld.encounters.uncommon.1.pokemon", 0xD892, [0], null);
            mapper.AssertAreEqual("overworld.encounters.uncommon.2.level", 0xD893, [0], 0);
            mapper.AssertAreEqual("overworld.encounters.uncommon.2.pokemon", 0xD894, [0], null);
            mapper.AssertAreEqual("overworld.encounters.uncommon.3.level", 0xD895, [0], 0);
            mapper.AssertAreEqual("overworld.encounters.uncommon.3.pokemon", 0xD896, [0], null);
            mapper.AssertAreEqual("overworld.encounters.rare.0.level", 0xD897, [0], 0);
            mapper.AssertAreEqual("overworld.encounters.rare.0.pokemon", 0xD898, [0], null);
            mapper.AssertAreEqual("overworld.encounters.rare.1.level", 0xD899, [0], 0);
            mapper.AssertAreEqual("overworld.encounters.rare.1.pokemon", 0xD89A, [0], null);
            mapper.AssertAreEqual("overworld.repelCount", 0xD0DA, [0], 0);
            mapper.AssertAreEqual("overworld.safariZone.safariTime", 0xD70C, [0], 0);
            mapper.AssertAreEqual("overworld.safariZone.safariBalls", 0xDA46, [0], 0);
            mapper.AssertAreEqual("overworld.safariZone.oppBaitingFactor", 0xCCE8, [0], 0);
            mapper.AssertAreEqual("overworld.mapData.tileset", 0xD366, [5], 5);
            mapper.AssertAreEqual("overworld.mapData.height", 0xD367, [6], 6);
            mapper.AssertAreEqual("overworld.mapData.width", 0xD368, [5], 5);
            mapper.AssertAreEqual("overworld.mapData.palette", 0xD35C, [0], 0);
            mapper.AssertAreEqual("overworld.mapData.lastMapLocation", 0xD365, [10], "Saffron City");
            mapper.AssertAreEqual("events.beatChampion", 0xD866, [0], false);
            mapper.AssertAreEqual("events.overworldFlags.countPlayTime", 0xD731, [1], true);
            mapper.AssertAreEqual("events.overworldFlags.debugMode", 0xD731, [1], false);
            mapper.AssertAreEqual("events.overworldFlags.flyOrDungeon", 0xD731, [1], false);
            mapper.AssertAreEqual("events.overworldFlags.flyWarp", 0xD731, [1], false);
            mapper.AssertAreEqual("events.overworldFlags.dungeonWarp", 0xD731, [1], false);
            mapper.AssertAreEqual("events.overworldFlags.forceBike", 0xD731, [1], false);
            mapper.AssertAreEqual("events.overworldFlags.destinationIsBlackout", 0xD731, [1], false);
            mapper.AssertAreEqual("events.trashCanPuzzle", 0xD772, [0], false);
            mapper.AssertAreEqual("trainers.viridianForest.bugcatcher1", 0xD7F2, [0], false);
            mapper.AssertAreEqual("trainers.viridianForest.bugcatcher2", 0xD7F2, [0], false);
            mapper.AssertAreEqual("trainers.viridianForest.bugcatcher3", 0xD7F2, [0], false);
            mapper.AssertAreEqual("trainers.viridianForest.lass19", 0xD7F2, [0], false);
            mapper.AssertAreEqual("trainers.viridianForest.bugcatcher15", 0xD7F2, [0], false);
            mapper.AssertAreEqual("trainers.pewterCityGym.jrTrainerM1", 0xD754, [0], false);
            mapper.AssertAreEqual("trainers.pewterCityGym.tmReceived", 0xD754, [0], false);
            mapper.AssertAreEqual("trainers.pewterCityGym.leaderDefeated", 0xD754, [0], false);
            mapper.AssertAreEqual("trainers.ceruleanCityGym.jrTrainerF1", 0xD75D, [0], false);
            mapper.AssertAreEqual("trainers.ceruleanCityGym.swimmer1", 0xD75D, [0], false);
            mapper.AssertAreEqual("trainers.ceruleanCityGym.tmReceived", 0xD75D, [0], false);
            mapper.AssertAreEqual("trainers.ceruleanCityGym.leaderDefeated", 0xD75D, [0], false);
            mapper.AssertAreEqual("trainers.vermilionCityGym.gentleman3", 0xD772, [0], false);
            mapper.AssertAreEqual("trainers.vermilionCityGym.rocker1", 0xD772, [0], false);
            mapper.AssertAreEqual("trainers.vermilionCityGym.sailor8", 0xD772, [0], false);
            mapper.AssertAreEqual("trainers.vermilionCityGym.tmReceived", 0xD772, [0], false);
            mapper.AssertAreEqual("trainers.vermilionCityGym.leaderDefeated", 0xD772, [0], false);
            mapper.AssertAreEqual("trainers.celadonCityGym.tmReceived", 0xD77B, [0], false);
            mapper.AssertAreEqual("trainers.celadonCityGym.leaderDefeated", 0xD77B, [0], false);
            mapper.AssertAreEqual("trainers.celadonCityGym.lass17", 0xD77B, [0], false);
            mapper.AssertAreEqual("trainers.celadonCityGym.beauty1", 0xD77B, [0], false);
            mapper.AssertAreEqual("trainers.celadonCityGym.jrTrainerF11", 0xD77B, [0], false);
            mapper.AssertAreEqual("trainers.celadonCityGym.beauty2", 0xD77B, [0], false);
            mapper.AssertAreEqual("trainers.celadonCityGym.lass18", 0xD77B, [0], false);
            mapper.AssertAreEqual("trainers.celadonCityGym.beauty3", 0xD77B, [0], false);
            mapper.AssertAreEqual("trainers.celadonCityGym.cooltrainerF1", 0xD77C, [0], false);
            mapper.AssertAreEqual("trainers.fucshiaCityGym.tmReceived", 0xD791, [0], false);
            mapper.AssertAreEqual("trainers.fucshiaCityGym.leaderDefeated", 0xD791, [0], false);
            mapper.AssertAreEqual("trainers.fucshiaCityGym.juggler7", 0xD791, [0], false);
            mapper.AssertAreEqual("trainers.fucshiaCityGym.juggler3", 0xD791, [0], false);
            mapper.AssertAreEqual("trainers.fucshiaCityGym.juggler8", 0xD791, [0], false);
            mapper.AssertAreEqual("trainers.fucshiaCityGym.tamer1", 0xD791, [0], false);
            mapper.AssertAreEqual("trainers.fucshiaCityGym.tamer2", 0xD791, [0], false);
            mapper.AssertAreEqual("trainers.fucshiaCityGym.juggler4", 0xD791, [0], false);
            mapper.AssertAreEqual("trainers.cinnabarIslandGym.tmReceived", 0xD799, [0], false);
            mapper.AssertAreEqual("trainers.cinnabarIslandGym.leaderDefeated", 0xD799, [0], false);
            mapper.AssertAreEqual("trainers.cinnabarIslandGym.superNerd9", 0xD799, [0], false);
            mapper.AssertAreEqual("trainers.cinnabarIslandGym.burglar4", 0xD799, [0], false);
            mapper.AssertAreEqual("trainers.cinnabarIslandGym.superNerd10", 0xD799, [0], false);
            mapper.AssertAreEqual("trainers.cinnabarIslandGym.burglar5", 0xD799, [0], false);
            mapper.AssertAreEqual("trainers.cinnabarIslandGym.superNerd11", 0xD799, [0], false);
            mapper.AssertAreEqual("trainers.cinnabarIslandGym.burglar6", 0xD799, [0], false);
            mapper.AssertAreEqual("trainers.cinnabarIslandGym.superNerd12", 0xD79A, [0], false);
            mapper.AssertAreEqual("trainers.saffronCityGym.tmReceived", 0xD7B2, [0], false);
            mapper.AssertAreEqual("trainers.saffronCityGym.leaderDefeated", 0xD7B2, [0], false);
            mapper.AssertAreEqual("trainers.saffronCityGym.channeler22", 0xD7B2, [0], false);
            mapper.AssertAreEqual("trainers.saffronCityGym.psychic1", 0xD7B2, [0], false);
            mapper.AssertAreEqual("trainers.saffronCityGym.channeler23", 0xD7B2, [0], false);
            mapper.AssertAreEqual("trainers.saffronCityGym.psychic2", 0xD7B2, [0], false);
            mapper.AssertAreEqual("trainers.saffronCityGym.channeler24", 0xD7B2, [0], false);
            mapper.AssertAreEqual("trainers.saffronCityGym.psychic3", 0xD7B2, [0], false);
            mapper.AssertAreEqual("trainers.saffronCityGym.psychic4", 0xD7B3, [0], false);
            mapper.AssertAreEqual("trainers.viridianCityGym.tmReceived", 0xD750, [0], false);
            mapper.AssertAreEqual("trainers.viridianCityGym.leaderDefeated", 0xD750, [0], false);
            mapper.AssertAreEqual("trainers.viridianCityGym.cooltrainerM9", 0xD750, [0], false);
            mapper.AssertAreEqual("trainers.viridianCityGym.blackbelt6", 0xD750, [0], false);
            mapper.AssertAreEqual("trainers.viridianCityGym.tamer3", 0xD750, [0], false);
            mapper.AssertAreEqual("trainers.viridianCityGym.blackbelt7", 0xD750, [0], false);
            mapper.AssertAreEqual("trainers.viridianCityGym.cooltrainerM10", 0xD750, [0], false);
            mapper.AssertAreEqual("trainers.viridianCityGym.blackbelt8", 0xD750, [0], false);
            mapper.AssertAreEqual("trainers.viridianCityGym.tamer4", 0xD751, [0], false);
            mapper.AssertAreEqual("trainers.viridianCityGym.coolTrainerM", 0xD751, [0], false);
            mapper.AssertAreEqual("battle.type", 0xD056, [2], "Trainer");
            mapper.AssertAreEqual("battle.animationTurn", 0xFFF3, [1], "Opponent");
            mapper.AssertAreEqual("battle.specialType", 0xD059, [0], "Normal");
            mapper.AssertAreEqual("battle.lowHealthAlarm", 0xCCF6, [0], "Enabled");
            mapper.AssertAreEqual("battle.attackDamage", 0xD0D7, [0], 0);
            mapper.AssertAreEqual("battle.trainer.name", 0xD049, [129, 148, 147, 147, 80, 129, 139, 148, 132, 80, 134], "BUTT");
            mapper.AssertAreEqual("battle.trainer.class", 0xD030, [25], "RIVAL1");
            mapper.AssertAreEqual("battle.trainer.number", 0xD05C, [1], 1);
            mapper.AssertAreEqual("battle.trainer.gymLeader", 0xD05B, [0], 0);
            mapper.AssertAreEqual("battle.trainer.totalPokemon", 0xD89B, [1], 1);
            mapper.AssertAreEqual("battle.trainer.team.0.nickname", 0xD9ED, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("battle.trainer.team.0.species", 0xD8A3, [102], "Eevee");
            mapper.AssertAreEqual("battle.trainer.team.0.pokedexNumber", 0xD8A3, [102], "133");
            mapper.AssertAreEqual("battle.trainer.team.0.level", 0xD8C4, [5], 5);
            mapper.AssertAreEqual("battle.trainer.team.0.expPoints", 0xD8B1, [0, 0, 125], 125);
            mapper.AssertAreEqual("battle.trainer.team.0.statusCondition", 0xD8A7, [0], " ");
            mapper.AssertAreEqual("battle.trainer.team.0.maxHp", 0xD8C5, [0, 21], 21);
            mapper.AssertAreEqual("battle.trainer.team.0.hp", 0xD8A4, [0, 21], 21);
            mapper.AssertAreEqual("battle.trainer.team.0.attack", 0xD8C7, [0, 11], 11);
            mapper.AssertAreEqual("battle.trainer.team.0.defense", 0xD8C9, [0, 10], 10);
            mapper.AssertAreEqual("battle.trainer.team.0.speed", 0xD8CB, [0, 11], 11);
            mapper.AssertAreEqual("battle.trainer.team.0.special", 0xD8CD, [0, 12], 12);
            mapper.AssertAreEqual("battle.trainer.team.0.dvAttack", 0xD8BE, [152], 9);
            mapper.AssertAreEqual("battle.trainer.team.0.dvDefense", 0xD8BE, [152], 8);
            mapper.AssertAreEqual("battle.trainer.team.0.dvSpeed", 0xD8BF, [136], 8);
            mapper.AssertAreEqual("battle.trainer.team.0.dvSpecial", 0xD8BF, [136], 8);
            mapper.AssertAreEqual("battle.trainer.team.0.move1", 0xD8AB, [33], "TACKLE");
            mapper.AssertAreEqual("battle.trainer.team.0.move2", 0xD8AC, [39], "TAIL WHIP");
            mapper.AssertAreEqual("battle.trainer.team.0.move3", 0xD8AD, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.0.move4", 0xD8AE, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.0.move1pp", 0xD8C0, [35], 35);
            mapper.AssertAreEqual("battle.trainer.team.0.move2pp", 0xD8C1, [30], 30);
            mapper.AssertAreEqual("battle.trainer.team.0.move3pp", 0xD8C2, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.0.move4pp", 0xD8C3, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.0.move1ppUp", 0xD8C0, [35], 0);
            mapper.AssertAreEqual("battle.trainer.team.0.move2ppUp", 0xD8C1, [30], 0);
            mapper.AssertAreEqual("battle.trainer.team.0.move3ppUp", 0xD8C2, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.0.move4ppUp", 0xD8C3, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.0.statExpHp", 0xD8B4, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.0.statExpAttack", 0xD8B6, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.0.statExpDefense", 0xD8B8, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.0.statExpSpeed", 0xD8BA, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.0.statExpSpecial", 0xD8BC, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.0.type1", 0xD8A8, [0], "Normal");
            mapper.AssertAreEqual("battle.trainer.team.0.type2", 0xD8A9, [0], "Normal");
            mapper.AssertAreEqual("battle.trainer.team.0.trainerId", 0xD8AF, [178, 22], 45590);
            mapper.AssertAreEqual("battle.trainer.team.0.catchRate", 0xD8AA, [45], 45);
            mapper.AssertAreEqual("battle.trainer.team.1.nickname", 0xD9F8, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("battle.trainer.team.1.species", 0xD8CF, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.1.pokedexNumber", 0xD8CF, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.1.level", 0xD8F0, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.expPoints", 0xD8DD, [0, 0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.statusCondition", 0xD8D3, [0], " ");
            mapper.AssertAreEqual("battle.trainer.team.1.maxHp", 0xD8F1, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.hp", 0xD8D0, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.attack", 0xD8F3, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.defense", 0xD8F5, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.speed", 0xD8F7, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.special", 0xD8F9, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.dvAttack", 0xD8EA, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.dvDefense", 0xD8EA, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.dvSpeed", 0xD8EB, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.dvSpecial", 0xD8EB, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.move1", 0xD8D7, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.1.move2", 0xD8D8, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.1.move3", 0xD8D9, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.1.move4", 0xD8DA, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.1.move1pp", 0xD8EC, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.move2pp", 0xD8ED, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.move3pp", 0xD8EE, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.move4pp", 0xD8EF, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.move1ppUp", 0xD8EC, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.move2ppUp", 0xD8ED, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.move3ppUp", 0xD8EE, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.move4ppUp", 0xD8EF, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.statExpHp", 0xD8E0, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.statExpAttack", 0xD8E2, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.statExpDefense", 0xD8E4, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.statExpSpeed", 0xD8E6, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.statExpSpecial", 0xD8E8, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.type1", 0xD8D4, [0], "Normal");
            mapper.AssertAreEqual("battle.trainer.team.1.type2", 0xD8D5, [0], "Normal");
            mapper.AssertAreEqual("battle.trainer.team.1.trainerId", 0xD8DB, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.1.catchRate", 0xD8D6, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.nickname", 0xDA03, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("battle.trainer.team.2.species", 0xD8FB, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.2.pokedexNumber", 0xD8FB, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.2.level", 0xD91C, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.expPoints", 0xD909, [0, 0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.statusCondition", 0xD8FF, [0], " ");
            mapper.AssertAreEqual("battle.trainer.team.2.maxHp", 0xD91D, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.hp", 0xD8FC, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.attack", 0xD91F, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.defense", 0xD921, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.speed", 0xD923, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.special", 0xD925, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.dvAttack", 0xD916, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.dvDefense", 0xD916, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.dvSpeed", 0xD917, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.dvSpecial", 0xD917, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.move1", 0xD903, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.2.move2", 0xD904, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.2.move3", 0xD905, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.2.move4", 0xD906, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.2.move1pp", 0xD918, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.move2pp", 0xD919, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.move3pp", 0xD91A, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.move4pp", 0xD91B, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.move1ppUp", 0xD918, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.move2ppUp", 0xD919, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.move3ppUp", 0xD91A, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.move4ppUp", 0xD91B, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.statExpHp", 0xD90C, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.statExpAttack", 0xD90E, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.statExpDefense", 0xD910, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.statExpSpeed", 0xD912, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.statExpSpecial", 0xD914, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.type1", 0xD900, [0], "Normal");
            mapper.AssertAreEqual("battle.trainer.team.2.type2", 0xD901, [0], "Normal");
            mapper.AssertAreEqual("battle.trainer.team.2.trainerId", 0xD907, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.2.catchRate", 0xD902, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.nickname", 0xD927, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("battle.trainer.team.3.species", 0xD927, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.3.pokedexNumber", 0xD927, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.3.level", 0xD948, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.expPoints", 0xD935, [0, 0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.statusCondition", 0xD92B, [0], " ");
            mapper.AssertAreEqual("battle.trainer.team.3.maxHp", 0xD949, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.hp", 0xD928, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.attack", 0xD94B, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.defense", 0xD94D, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.speed", 0xD94F, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.special", 0xD951, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.dvAttack", 0xD942, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.dvDefense", 0xD942, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.dvSpeed", 0xD943, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.dvSpecial", 0xD943, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.move1", 0xD92F, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.3.move2", 0xD930, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.3.move3", 0xD931, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.3.move4", 0xD932, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.3.move1pp", 0xD944, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.move2pp", 0xD945, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.move3pp", 0xD946, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.move4pp", 0xD947, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.move1ppUp", 0xD944, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.move2ppUp", 0xD945, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.move3ppUp", 0xD946, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.move4ppUp", 0xD947, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.statExpHp", 0xD938, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.statExpAttack", 0xD93A, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.statExpDefense", 0xD93C, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.statExpSpeed", 0xD93E, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.statExpSpecial", 0xD940, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.type1", 0xD92C, [0], "Normal");
            mapper.AssertAreEqual("battle.trainer.team.3.type2", 0xD92D, [0], "Normal");
            mapper.AssertAreEqual("battle.trainer.team.3.trainerId", 0xD933, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.3.catchRate", 0xD92E, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.nickname", 0xD953, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("battle.trainer.team.4.species", 0xD953, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.4.pokedexNumber", 0xD953, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.4.level", 0xD974, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.expPoints", 0xD961, [0, 0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.statusCondition", 0xD957, [0], " ");
            mapper.AssertAreEqual("battle.trainer.team.4.maxHp", 0xD975, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.hp", 0xD954, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.attack", 0xD977, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.defense", 0xD979, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.speed", 0xD97B, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.special", 0xD97D, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.dvAttack", 0xD96E, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.dvDefense", 0xD96E, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.dvSpeed", 0xD96F, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.dvSpecial", 0xD96F, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.move1", 0xD95B, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.4.move2", 0xD95C, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.4.move3", 0xD95D, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.4.move4", 0xD95E, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.4.move1pp", 0xD970, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.move2pp", 0xD971, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.move3pp", 0xD972, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.move4pp", 0xD973, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.move1ppUp", 0xD970, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.move2ppUp", 0xD971, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.move3ppUp", 0xD972, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.move4ppUp", 0xD973, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.statExpHp", 0xD964, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.statExpAttack", 0xD966, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.statExpDefense", 0xD968, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.statExpSpeed", 0xD96A, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.statExpSpecial", 0xD96C, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.type1", 0xD958, [0], "Normal");
            mapper.AssertAreEqual("battle.trainer.team.4.type2", 0xD959, [0], "Normal");
            mapper.AssertAreEqual("battle.trainer.team.4.trainerId", 0xD95F, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.4.catchRate", 0xD95A, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.nickname", 0xD97F, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("battle.trainer.team.5.species", 0xD97F, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.5.pokedexNumber", 0xD97F, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.5.level", 0xD9A0, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.expPoints", 0xD98D, [0, 0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.statusCondition", 0xD983, [0], " ");
            mapper.AssertAreEqual("battle.trainer.team.5.maxHp", 0xD9A1, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.hp", 0xD980, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.attack", 0xD9A3, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.defense", 0xD9A5, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.speed", 0xD9A7, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.special", 0xD9A9, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.dvAttack", 0xD99A, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.dvDefense", 0xD99A, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.dvSpeed", 0xD99B, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.dvSpecial", 0xD99B, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.move1", 0xD987, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.5.move2", 0xD988, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.5.move3", 0xD989, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.5.move4", 0xD98A, [0], null);
            mapper.AssertAreEqual("battle.trainer.team.5.move1pp", 0xD99C, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.move2pp", 0xD99D, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.move3pp", 0xD99E, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.move4pp", 0xD99F, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.move1ppUp", 0xD99C, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.move2ppUp", 0xD99D, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.move3ppUp", 0xD99E, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.move4ppUp", 0xD99F, [0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.statExpHp", 0xD990, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.statExpAttack", 0xD992, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.statExpDefense", 0xD994, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.statExpSpeed", 0xD996, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.statExpSpecial", 0xD998, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.type1", 0xD984, [0], "Normal");
            mapper.AssertAreEqual("battle.trainer.team.5.type2", 0xD985, [0], "Normal");
            mapper.AssertAreEqual("battle.trainer.team.5.trainerId", 0xD98B, [0, 0], 0);
            mapper.AssertAreEqual("battle.trainer.team.5.catchRate", 0xD986, [0], 0);
            mapper.AssertAreEqual("battle.yourPokemon.partyPos", 0xCC2F, [0], 0);
            mapper.AssertAreEqual("battle.yourPokemon.nickname", 0xD008, [128, 132, 145, 142, 131, 128, 130, 147, 152, 139, 80], "AERODACTYL");
            mapper.AssertAreEqual("battle.yourPokemon.species", 0xD013, [171], "Aerodactyl");
            mapper.AssertAreEqual("battle.yourPokemon.pokedexNumber", 0xD013, [171], "142");
            mapper.AssertAreEqual("battle.yourPokemon.type1", 0xD018, [5], "Rock");
            mapper.AssertAreEqual("battle.yourPokemon.type2", 0xD019, [2], "Flying");
            mapper.AssertAreEqual("battle.yourPokemon.level", 0xD021, [5], 5);
            mapper.AssertAreEqual("battle.yourPokemon.modStageAttack", 0xCD1A, [7], "0");
            mapper.AssertAreEqual("battle.yourPokemon.modStageDefense", 0xCD1B, [7], "0");
            mapper.AssertAreEqual("battle.yourPokemon.modStageSpeed", 0xCD1C, [7], "0");
            mapper.AssertAreEqual("battle.yourPokemon.modStageSpecial", 0xCD1D, [7], "0");
            mapper.AssertAreEqual("battle.yourPokemon.modStageAccuracy", 0xCD1E, [7], "0");
            mapper.AssertAreEqual("battle.yourPokemon.modStageEvasion", 0xCD1F, [7], "0");
            mapper.AssertAreEqual("battle.yourPokemon.hp", 0xD014, [0, 23], 23);
            mapper.AssertAreEqual("battle.yourPokemon.maxHp", 0xD022, [0, 23], 23);
            mapper.AssertAreEqual("battle.yourPokemon.attack", 0xD024, [0, 16], 16);
            mapper.AssertAreEqual("battle.yourPokemon.defense", 0xD026, [0, 11], 11);
            mapper.AssertAreEqual("battle.yourPokemon.speed", 0xD028, [0, 18], 18);
            mapper.AssertAreEqual("battle.yourPokemon.special", 0xD02A, [0, 11], 11);
            mapper.AssertAreEqual("battle.yourPokemon.battleStatHp", 0xD014, [0, 23], 23);
            mapper.AssertAreEqual("battle.yourPokemon.battleStatMaxHp", 0xD022, [0, 23], 23);
            mapper.AssertAreEqual("battle.yourPokemon.battleStatAttack", 0xD024, [0, 16], 16);
            mapper.AssertAreEqual("battle.yourPokemon.battleStatDefense", 0xD026, [0, 11], 11);
            mapper.AssertAreEqual("battle.yourPokemon.battleStatSpeed", 0xD028, [0, 18], 18);
            mapper.AssertAreEqual("battle.yourPokemon.battleStatSpecial", 0xD02A, [0, 11], 11);
            mapper.AssertAreEqual("battle.yourPokemon.battleStatusCondition", 0xD017, [0], " ");
            mapper.AssertAreEqual("battle.yourPokemon.tempStatusConfusion", 0xD061, [0], null);
            mapper.AssertAreEqual("battle.yourPokemon.tempStatusBadPoison", 0xD063, [0], null);
            mapper.AssertAreEqual("battle.yourPokemon.move1", 0xD01B, [17], "WING ATTACK");
            mapper.AssertAreEqual("battle.yourPokemon.move2", 0xD01C, [97], "AGILITY");
            mapper.AssertAreEqual("battle.yourPokemon.move3", 0xD01D, [0], null);
            mapper.AssertAreEqual("battle.yourPokemon.move4", 0xD01E, [0], null);
            mapper.AssertAreEqual("battle.yourPokemon.move1pp", 0xD02C, [35], 35);
            mapper.AssertAreEqual("battle.yourPokemon.move2pp", 0xD02D, [30], 30);
            mapper.AssertAreEqual("battle.yourPokemon.move3pp", 0xD02E, [0], 0);
            mapper.AssertAreEqual("battle.yourPokemon.move4pp", 0xD02F, [0], 0);
            mapper.AssertAreEqual("battle.yourPokemon.effects.bide", 0xD061, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.thrash", 0xD061, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.multiHit", 0xD061, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.flinch", 0xD061, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.charging", 0xD061, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.multiTurn", 0xD061, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.invulnerable", 0xD061, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.confusion", 0xD061, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.xAccuracy", 0xD062, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.mist", 0xD062, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.focusEnergy", 0xD062, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.hasSubstitute", 0xD062, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.recharge", 0xD062, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.rage", 0xD062, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.leechSeeded", 0xD062, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.toxic", 0xD063, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.lightScreen", 0xD063, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.reflect", 0xD063, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.effects.transformed", 0xD063, [0], false);
            mapper.AssertAreEqual("battle.yourPokemon.counters.multiHit", 0xD069, [0], 0);
            mapper.AssertAreEqual("battle.yourPokemon.counters.confusion", 0xD063, [0], 0);
            mapper.AssertAreEqual("battle.yourPokemon.counters.toxic", 0xD06A, [0], 0);
            mapper.AssertAreEqual("battle.yourPokemon.counters.disable", 0xD06C, [0, 0], 0);
            mapper.AssertAreEqual("battle.enemyPokemon.partyPos", 0xCFE7, [0], 0);
            mapper.AssertAreEqual("battle.enemyPokemon.species", 0xCFD7, [102], "Eevee");
            mapper.AssertAreEqual("battle.enemyPokemon.pokedexNumber", 0xCFD7, [102], "133");
            mapper.AssertAreEqual("battle.enemyPokemon.type1", 0xCFE9, [0], "Normal");
            mapper.AssertAreEqual("battle.enemyPokemon.type2", 0xCFEA, [0], "Normal");
            mapper.AssertAreEqual("battle.enemyPokemon.level", 0xCFF2, [5], 5);
            mapper.AssertAreEqual("battle.enemyPokemon.maxHp", 0xCFF3, [0, 21], 21);
            mapper.AssertAreEqual("battle.enemyPokemon.hp", 0xCFE5, [0, 21], 21);
            mapper.AssertAreEqual("battle.enemyPokemon.attack", 0xCFF5, [0, 11], 11);
            mapper.AssertAreEqual("battle.enemyPokemon.defense", 0xCFF7, [0, 10], 10);
            mapper.AssertAreEqual("battle.enemyPokemon.speed", 0xCFF9, [0, 11], 11);
            mapper.AssertAreEqual("battle.enemyPokemon.special", 0xCFFB, [0, 12], 12);
            mapper.AssertAreEqual("battle.enemyPokemon.statusCondition", 0xCFE8, [0], " ");
            mapper.AssertAreEqual("battle.enemyPokemon.modEnemyStageAttack", 0xCD2E, [7], "0");
            mapper.AssertAreEqual("battle.enemyPokemon.modEnemyStageDefense", 0xCD2F, [7], "0");
            mapper.AssertAreEqual("battle.enemyPokemon.modEnemyStageSpeed", 0xCD30, [7], "0");
            mapper.AssertAreEqual("battle.enemyPokemon.modEnemyStageSpecial", 0xCD31, [7], "0");
            mapper.AssertAreEqual("battle.enemyPokemon.modEnemyStageAccuracy", 0xCD32, [7], "0");
            mapper.AssertAreEqual("battle.enemyPokemon.modEnemyStageEvasion", 0xCD33, [7], "0");
            mapper.AssertAreEqual("battle.enemyPokemon.move1", 0xCFEC, [33], "TACKLE");
            mapper.AssertAreEqual("battle.enemyPokemon.move2", 0xCFED, [39], "TAIL WHIP");
            mapper.AssertAreEqual("battle.enemyPokemon.move3", 0xCFEE, [0], null);
            mapper.AssertAreEqual("battle.enemyPokemon.move4", 0xCFEF, [0], null);
            mapper.AssertAreEqual("battle.enemyPokemon.dvAttack", 0xCFF0, [152], 9);
            mapper.AssertAreEqual("battle.enemyPokemon.dvDefense", 0xCFF0, [152], 8);
            mapper.AssertAreEqual("battle.enemyPokemon.dvSpeed", 0xCFF1, [136], 8);
            mapper.AssertAreEqual("battle.enemyPokemon.dvSpecial", 0xCFF1, [136], 8);
            mapper.AssertAreEqual("battle.enemyPokemon.baseHp", 0xD001, [55], 7);
            mapper.AssertAreEqual("battle.enemyPokemon.baseAttack", 0xD002, [55], 7);
            mapper.AssertAreEqual("battle.enemyPokemon.baseDefense", 0xD003, [50], 2);
            mapper.AssertAreEqual("battle.enemyPokemon.baseSpeed", 0xD004, [55], 7);
            mapper.AssertAreEqual("battle.enemyPokemon.baseSpecial", 0xD005, [65], 1);
            mapper.AssertAreEqual("battle.enemyPokemon.baseExp", 0xD007, [92], 12);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.bide", 0xD066, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.thrash", 0xD066, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.multiHit", 0xD066, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.flinch", 0xD066, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.charging", 0xD066, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.multiTurn", 0xD066, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.invulnerable", 0xD066, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.confusion", 0xD066, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.xAccuracy", 0xD067, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.mist", 0xD067, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.focusEnergy", 0xD067, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.hasSubstitute", 0xD067, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.recharge", 0xD067, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.rage", 0xD067, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.leechSeeded", 0xD067, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.toxic", 0xD068, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.lightScreen", 0xD068, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.reflect", 0xD068, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.effects.transformed", 0xD068, [0], false);
            mapper.AssertAreEqual("battle.enemyPokemon.counters.multiHit", 0xD06E, [0], 0);
            mapper.AssertAreEqual("battle.enemyPokemon.counters.confusion", 0xD06F, [0], 0);
            mapper.AssertAreEqual("battle.enemyPokemon.counters.toxic", 0xD070, [0], 0);
            mapper.AssertAreEqual("battle.enemyPokemon.counters.disable", 0xD071, [0], 0);
            mapper.AssertAreEqual("battle.playerMove.move", 0xCFD1, [0], null);
            mapper.AssertAreEqual("battle.playerMove.effect", 0xCFD2, [0], 0);
            mapper.AssertAreEqual("battle.playerMove.power", 0xCFD3, [0], 0);
            mapper.AssertAreEqual("battle.playerMove.type", 0xCFD4, [0], "Normal");
            mapper.AssertAreEqual("battle.playerMove.accuracy", 0xCFD5, [0], 0);
            mapper.AssertAreEqual("battle.playerMove.maxPP", 0xCFD6, [0], 0);
            mapper.AssertAreEqual("battle.enemyMove.move", 0xCFCB, [0], null);
            mapper.AssertAreEqual("battle.enemyMove.effect", 0xCFCC, [0], 0);
            mapper.AssertAreEqual("battle.enemyMove.power", 0xCFCD, [0], 0);
            mapper.AssertAreEqual("battle.enemyMove.type", 0xCFCE, [0], "Normal");
            mapper.AssertAreEqual("battle.enemyMove.accuracy", 0xCFCF, [0], 0);
            mapper.AssertAreEqual("battle.enemyMove.maxPP", 0xCFD0, [0], 0);
            mapper.AssertAreEqual("battle.turnInfo.battleStart", 0xCCF5, [1], 1);
            mapper.AssertAreEqual("battle.turnInfo.trainerDefeated", 0xCCF6, [0], 0);
            mapper.AssertAreEqual("battle.turnInfo.nextAttackDamage", 0xD0D7, [0], 0);
            mapper.AssertAreEqual("pokemart.itemCount", 0xCF7B, [0], 0);
            mapper.AssertAreEqual("pokemart.items.0", 0xCF7B, [0], null);
            mapper.AssertAreEqual("pokemart.items.1", 0xCF7C, [0], null);
            mapper.AssertAreEqual("pokemart.items.2", 0xCF7D, [0], null);
            mapper.AssertAreEqual("pokemart.items.3", 0xCF7E, [0], null);
            mapper.AssertAreEqual("pokemart.items.4", 0xCF7F, [0], null);
            mapper.AssertAreEqual("pokemart.items.5", 0xCF80, [0], null);
            mapper.AssertAreEqual("pokemart.items.6", 0xCF81, [0], null);
            mapper.AssertAreEqual("pokemart.items.7", 0xCF82, [0], null);
            mapper.AssertAreEqual("pokemart.items.8", 0xCF83, [0], null);
            mapper.AssertAreEqual("pokemart.items.9", 0xCF84, [0], null);
            mapper.AssertAreEqual("pokemart.items.10", 0xCF85, [0], null);
            mapper.AssertAreEqual("rival.name", 0xD349, [129, 148, 147, 147, 80, 129, 139, 148], "BUTT");
            mapper.AssertAreEqual("rival.finalTeam", 0xD714, [1], "Jolteon");
            mapper.AssertAreEqual("audio.channel1", 0xC026, [237], 237);
            mapper.AssertAreEqual("audio.channel2", 0xC027, [237], 237);
            mapper.AssertAreEqual("audio.channel3", 0xC028, [237], 237);
            mapper.AssertAreEqual("audio.channel4", 0xC029, [0], 0);
            mapper.AssertAreEqual("audio.channel5", 0xC02A, [0], 0);
            mapper.AssertAreEqual("audio.channel6", 0xC02B, [0], 0);
            mapper.AssertAreEqual("audio.channel7", 0xC02C, [0], 0);
            mapper.AssertAreEqual("audio.channel8", 0xC02D, [0], 0);
            mapper.AssertAreEqual("audio.currentSound", 0xC001, [125], 125);
            mapper.AssertAreEqual("audio.newSoundId", 0xC0EE, [0], 0);
            mapper.AssertAreEqual("audio.audioBank", 0xC0EF, [8], 8);
            mapper.AssertAreEqual("audio.overworldTrackCurrentMap", 0xD35A, [205], "Cinnabar City");
            mapper.AssertAreEqual("audio.audioBankCurrentMap", 0xD35B, [31], 31);
            mapper.AssertAreEqual("audio.volume.channel1", 0xC0DE, [167], 167);
            mapper.AssertAreEqual("audio.volume.channel2", 0xC0DF, [80], 80);
            mapper.AssertAreEqual("audio.volume.channel3", 0xC0E0, [32], 32);
            mapper.AssertAreEqual("audio.volume.channel4", 0xC0E1, [0], 0);
            mapper.AssertAreEqual("audio.volume.channel5", 0xC0E2, [180], 180);
            mapper.AssertAreEqual("audio.volume.channel6", 0xC0E3, [196], 196);
            mapper.AssertAreEqual("audio.volume.channel7", 0xC0E4, [32], 32);
            mapper.AssertAreEqual("audio.volume.channel8", 0xC0E5, [0], 0);
            mapper.AssertAreEqual("audio.tempo.music", 0xC0E8, [0, 112], 112);
            mapper.AssertAreEqual("audio.tempo.sfx", 0xC0EA, [1, 112], 368);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxCount", 0xDA7F, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn1", 0xDA80, [255], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn2", 0xDA81, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn3", 0xDA82, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn4", 0xDA83, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn5", 0xDA84, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn6", 0xDA85, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn7", 0xDA86, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn8", 0xDA87, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn9", 0xDA88, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn10", 0xDA89, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn11", 0xDA8A, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn12", 0xDA8B, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn13", 0xDA8C, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn14", 0xDA8D, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn15", 0xDA8E, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn16", 0xDA8F, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn17", 0xDA90, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn18", 0xDA91, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn19", 0xDA92, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBoxSummary.pkmn20", 0xDA93, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.nickname", 0xDE05, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.species", 0xDA95, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.pokedexNumber", 0xDA95, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.level", 0xDA98, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.expPoints", 0xDAA3, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.statusCondition", 0xDA99, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.hp", 0xDA96, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.dvAttack", 0xDAB0, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.dvDefense", 0xDAB0, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.dvSpeed", 0xDAB1, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.dvSpecial", 0xDAB1, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.statExpHp", 0xDAA6, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.statExpAttack", 0xDAA8, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.statExpDefense", 0xDAAA, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.statExpSpeed", 0xDAAC, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.statExpSpecial", 0xDAAE, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.move1", 0xDA9D, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.move2", 0xDA9E, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.move3", 0xDA9F, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.move4", 0xDAA0, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.move1pp", 0xDAB2, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.move2pp", 0xDAB3, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.move3pp", 0xDAB4, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.move4pp", 0xDAB5, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.type1", 0xDA9A, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.type2", 0xDA9B, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.0.trainerId", 0xDAA1, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.nickname", 0xDE10, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.species", 0xDAB6, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.pokedexNumber", 0xDAB6, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.level", 0xDAB9, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.expPoints", 0xDAC4, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.statusCondition", 0xDABA, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.hp", 0xDAB7, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.dvAttack", 0xDAD1, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.dvDefense", 0xDAD1, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.dvSpeed", 0xDAD2, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.dvSpecial", 0xDAD2, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.statExpHp", 0xDAC7, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.statExpAttack", 0xDAC9, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.statExpDefense", 0xDACB, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.statExpSpeed", 0xDACD, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.statExpSpecial", 0xDACF, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.move1", 0xDABE, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.move2", 0xDABF, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.move3", 0xDAC0, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.move4", 0xDAC1, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.move1pp", 0xDAD3, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.move2pp", 0xDAD4, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.move3pp", 0xDAD5, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.move4pp", 0xDAD6, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.type1", 0xDABB, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.type2", 0xDABC, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.1.trainerId", 0xDAC2, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.nickname", 0xDE1B, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.species", 0xDAD7, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.pokedexNumber", 0xDAD7, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.level", 0xDADA, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.expPoints", 0xDAE5, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.statusCondition", 0xDADB, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.hp", 0xDAD8, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.dvAttack", 0xDAF2, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.dvDefense", 0xDAF2, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.dvSpeed", 0xDAF3, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.dvSpecial", 0xDAF3, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.statExpHp", 0xDAE8, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.statExpAttack", 0xDAEA, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.statExpDefense", 0xDAEC, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.statExpSpeed", 0xDAEE, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.statExpSpecial", 0xDAF0, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.move1", 0xDADF, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.move2", 0xDAE0, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.move3", 0xDAE1, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.move4", 0xDAE2, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.move1pp", 0xDAF4, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.move2pp", 0xDAF5, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.move3pp", 0xDAF6, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.move4pp", 0xDAF7, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.type1", 0xDADC, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.type2", 0xDADD, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.2.trainerId", 0xDAE3, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.nickname", 0xDE26, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.species", 0xDAF8, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.pokedexNumber", 0xDAF8, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.level", 0xDAFB, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.expPoints", 0xDB06, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.statusCondition", 0xDAFC, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.hp", 0xDAF9, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.dvAttack", 0xDB13, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.dvDefense", 0xDB13, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.dvSpeed", 0xDB14, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.dvSpecial", 0xDB14, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.statExpHp", 0xDB09, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.statExpAttack", 0xDB0B, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.statExpDefense", 0xDB0D, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.statExpSpeed", 0xDB0F, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.statExpSpecial", 0xDB11, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.move1", 0xDB00, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.move2", 0xDB01, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.move3", 0xDB02, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.move4", 0xDB03, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.move1pp", 0xDB15, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.move2pp", 0xDB16, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.move3pp", 0xDB17, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.move4pp", 0xDB18, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.type1", 0xDAFD, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.type2", 0xDAFE, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.3.trainerId", 0xDB04, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.nickname", 0xDE31, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.species", 0xDB19, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.pokedexNumber", 0xDB19, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.level", 0xDB1C, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.expPoints", 0xDB27, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.statusCondition", 0xDB1D, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.hp", 0xDB1A, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.dvAttack", 0xDB34, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.dvDefense", 0xDB34, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.dvSpeed", 0xDB35, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.dvSpecial", 0xDB35, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.statExpHp", 0xDB2A, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.statExpAttack", 0xDB2C, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.statExpDefense", 0xDB2E, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.statExpSpeed", 0xDB30, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.statExpSpecial", 0xDB32, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.move1", 0xDB21, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.move2", 0xDB22, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.move3", 0xDB23, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.move4", 0xDB24, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.move1pp", 0xDB36, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.move2pp", 0xDB37, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.move3pp", 0xDB38, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.move4pp", 0xDB39, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.type1", 0xDB1E, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.type2", 0xDB1F, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.4.trainerId", 0xDB25, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.nickname", 0xDE3C, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.species", 0xDB3A, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.pokedexNumber", 0xDB3A, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.level", 0xDB3D, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.expPoints", 0xDB48, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.statusCondition", 0xDB3E, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.hp", 0xDB3B, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.dvAttack", 0xDB55, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.dvDefense", 0xDB55, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.dvSpeed", 0xDB56, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.dvSpecial", 0xDB56, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.statExpHp", 0xDB4B, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.statExpAttack", 0xDB4D, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.statExpDefense", 0xDB4F, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.statExpSpeed", 0xDB51, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.statExpSpecial", 0xDB53, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.move1", 0xDB42, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.move2", 0xDB43, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.move3", 0xDB44, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.move4", 0xDB45, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.move1pp", 0xDB57, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.move2pp", 0xDB58, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.move3pp", 0xDB59, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.move4pp", 0xDB5A, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.type1", 0xDB3F, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.type2", 0xDB40, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.5.trainerId", 0xDB46, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.nickname", 0xDE47, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.species", 0xDB5B, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.pokedexNumber", 0xDB5B, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.level", 0xDB5E, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.expPoints", 0xDB69, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.statusCondition", 0xDB5F, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.hp", 0xDB5C, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.dvAttack", 0xDB76, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.dvDefense", 0xDB76, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.dvSpeed", 0xDB77, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.dvSpecial", 0xDB77, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.statExpHp", 0xDB6C, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.statExpAttack", 0xDB6E, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.statExpDefense", 0xDB70, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.statExpSpeed", 0xDB72, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.statExpSpecial", 0xDB74, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.move1", 0xDB63, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.move2", 0xDB64, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.move3", 0xDB65, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.move4", 0xDB66, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.move1pp", 0xDB78, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.move2pp", 0xDB79, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.move3pp", 0xDB7A, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.move4pp", 0xDB7B, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.type1", 0xDB60, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.type2", 0xDB61, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.6.trainerId", 0xDB67, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.nickname", 0xDE52, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.species", 0xDB7C, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.pokedexNumber", 0xDB7C, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.level", 0xDB7F, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.expPoints", 0xDB8A, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.statusCondition", 0xDB80, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.hp", 0xDB7D, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.dvAttack", 0xDB97, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.dvDefense", 0xDB97, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.dvSpeed", 0xDB98, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.dvSpecial", 0xDB98, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.statExpHp", 0xDB8D, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.statExpAttack", 0xDB8F, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.statExpDefense", 0xDB91, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.statExpSpeed", 0xDB93, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.statExpSpecial", 0xDB95, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.move1", 0xDB84, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.move2", 0xDB85, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.move3", 0xDB86, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.move4", 0xDB87, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.move1pp", 0xDB99, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.move2pp", 0xDB9A, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.move3pp", 0xDB9B, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.move4pp", 0xDB9C, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.type1", 0xDB81, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.type2", 0xDB82, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.7.trainerId", 0xDB88, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.nickname", 0xDE5D, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.species", 0xDB9D, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.pokedexNumber", 0xDB9D, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.level", 0xDBA0, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.expPoints", 0xDBAB, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.statusCondition", 0xDBA1, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.hp", 0xDB9E, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.dvAttack", 0xDBB8, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.dvDefense", 0xDBB8, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.dvSpeed", 0xDBB9, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.dvSpecial", 0xDBB9, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.statExpHp", 0xDBAE, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.statExpAttack", 0xDBB0, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.statExpDefense", 0xDBB2, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.statExpSpeed", 0xDBB4, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.statExpSpecial", 0xDBB6, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.move1", 0xDBA5, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.move2", 0xDBA6, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.move3", 0xDBA7, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.move4", 0xDBA8, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.move1pp", 0xDBBA, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.move2pp", 0xDBBB, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.move3pp", 0xDBBC, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.move4pp", 0xDBBD, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.type1", 0xDBA2, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.type2", 0xDBA3, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.8.trainerId", 0xDBA9, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.nickname", 0xDE68, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.species", 0xDBBE, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.pokedexNumber", 0xDBBE, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.level", 0xDBC1, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.expPoints", 0xDBCC, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.statusCondition", 0xDBC2, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.hp", 0xDBBF, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.dvAttack", 0xDBD9, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.dvDefense", 0xDBD9, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.dvSpeed", 0xDBDA, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.dvSpecial", 0xDBDA, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.statExpHp", 0xDBCF, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.statExpAttack", 0xDBD1, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.statExpDefense", 0xDBD3, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.statExpSpeed", 0xDBD5, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.statExpSpecial", 0xDBD7, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.move1", 0xDBC6, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.move2", 0xDBC7, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.move3", 0xDBC8, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.move4", 0xDBC9, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.move1pp", 0xDBDB, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.move2pp", 0xDBDC, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.move3pp", 0xDBDD, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.move4pp", 0xDBDE, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.type1", 0xDBC3, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.type2", 0xDBC4, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.9.trainerId", 0xDBCA, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.nickname", 0xDE73, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.species", 0xDBDF, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.pokedexNumber", 0xDBDF, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.level", 0xDBE2, [251], 251);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.expPoints", 0xDBED, [1, 214, 0], 120320);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.statusCondition", 0xDBE3, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.hp", 0xDBE0, [15, 151], 3991);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.dvAttack", 0xDBFA, [72], 4);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.dvDefense", 0xDBFA, [72], 8);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.dvSpeed", 0xDBFB, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.dvSpecial", 0xDBFB, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.statExpHp", 0xDBF0, [0, 9], 9);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.statExpAttack", 0xDBF2, [19, 0], 4864);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.statExpDefense", 0xDBF4, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.statExpSpeed", 0xDBF6, [72, 0], 18432);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.statExpSpecial", 0xDBF8, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.move1", 0xDBE7, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.move2", 0xDBE8, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.move3", 0xDBE9, [9], "ThunderPunch");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.move4", 0xDBEA, [136], "HI JUMP KICK");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.move1pp", 0xDBFC, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.move2pp", 0xDBFD, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.move3pp", 0xDBFE, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.move4pp", 0xDBFF, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.type1", 0xDBE4, [15], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.type2", 0xDBE5, [131], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.10.trainerId", 0xDBEB, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.nickname", 0xDE7E, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.species", 0xDC00, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.pokedexNumber", 0xDC00, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.level", 0xDC03, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.expPoints", 0xDC0E, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.statusCondition", 0xDC04, [4], "Asleep");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.hp", 0xDC01, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.dvAttack", 0xDC1B, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.dvDefense", 0xDC1B, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.dvSpeed", 0xDC1C, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.dvSpecial", 0xDC1C, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.statExpHp", 0xDC11, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.statExpAttack", 0xDC13, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.statExpDefense", 0xDC15, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.statExpSpeed", 0xDC17, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.statExpSpecial", 0xDC19, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.move1", 0xDC08, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.move2", 0xDC09, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.move3", 0xDC0A, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.move4", 0xDC0B, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.move1pp", 0xDC1D, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.move2pp", 0xDC1E, [1], 1);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.move3pp", 0xDC1F, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.move4pp", 0xDC20, [1], 1);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.type1", 0xDC05, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.type2", 0xDC06, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.11.trainerId", 0xDC0C, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.nickname", 0xDE89, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.species", 0xDC21, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.pokedexNumber", 0xDC21, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.level", 0xDC24, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.expPoints", 0xDC2F, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.statusCondition", 0xDC25, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.hp", 0xDC22, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.dvAttack", 0xDC3C, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.dvDefense", 0xDC3C, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.dvSpeed", 0xDC3D, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.dvSpecial", 0xDC3D, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.statExpHp", 0xDC32, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.statExpAttack", 0xDC34, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.statExpDefense", 0xDC36, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.statExpSpeed", 0xDC38, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.statExpSpecial", 0xDC3A, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.move1", 0xDC29, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.move2", 0xDC2A, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.move3", 0xDC2B, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.move4", 0xDC2C, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.move1pp", 0xDC3E, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.move2pp", 0xDC3F, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.move3pp", 0xDC40, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.move4pp", 0xDC41, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.type1", 0xDC26, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.type2", 0xDC27, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.12.trainerId", 0xDC2D, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.nickname", 0xDE94, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.species", 0xDC42, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.pokedexNumber", 0xDC42, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.level", 0xDC45, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.expPoints", 0xDC50, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.statusCondition", 0xDC46, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.hp", 0xDC43, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.dvAttack", 0xDC5D, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.dvDefense", 0xDC5D, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.dvSpeed", 0xDC5E, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.dvSpecial", 0xDC5E, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.statExpHp", 0xDC53, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.statExpAttack", 0xDC55, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.statExpDefense", 0xDC57, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.statExpSpeed", 0xDC59, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.statExpSpecial", 0xDC5B, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.move1", 0xDC4A, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.move2", 0xDC4B, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.move3", 0xDC4C, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.move4", 0xDC4D, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.move1pp", 0xDC5F, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.move2pp", 0xDC60, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.move3pp", 0xDC61, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.move4pp", 0xDC62, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.type1", 0xDC47, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.type2", 0xDC48, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.13.trainerId", 0xDC4E, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.nickname", 0xDE9F, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.species", 0xDC63, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.pokedexNumber", 0xDC63, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.level", 0xDC66, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.expPoints", 0xDC71, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.statusCondition", 0xDC67, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.hp", 0xDC64, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.dvAttack", 0xDC7E, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.dvDefense", 0xDC7E, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.dvSpeed", 0xDC7F, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.dvSpecial", 0xDC7F, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.statExpHp", 0xDC74, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.statExpAttack", 0xDC76, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.statExpDefense", 0xDC78, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.statExpSpeed", 0xDC7A, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.statExpSpecial", 0xDC7C, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.move1", 0xDC6B, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.move2", 0xDC6C, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.move3", 0xDC6D, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.move4", 0xDC6E, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.move1pp", 0xDC80, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.move2pp", 0xDC81, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.move3pp", 0xDC82, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.move4pp", 0xDC83, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.type1", 0xDC68, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.type2", 0xDC69, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.14.trainerId", 0xDC6F, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.nickname", 0xDEAA, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.species", 0xDC84, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.pokedexNumber", 0xDC84, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.level", 0xDC87, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.expPoints", 0xDC92, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.statusCondition", 0xDC88, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.hp", 0xDC85, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.dvAttack", 0xDC9F, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.dvDefense", 0xDC9F, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.dvSpeed", 0xDCA0, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.dvSpecial", 0xDCA0, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.statExpHp", 0xDC95, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.statExpAttack", 0xDC97, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.statExpDefense", 0xDC99, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.statExpSpeed", 0xDC9B, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.statExpSpecial", 0xDC9D, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.move1", 0xDC8C, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.move2", 0xDC8D, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.move3", 0xDC8E, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.move4", 0xDC8F, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.move1pp", 0xDCA1, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.move2pp", 0xDCA2, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.move3pp", 0xDCA3, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.move4pp", 0xDCA4, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.type1", 0xDC89, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.type2", 0xDC8A, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.15.trainerId", 0xDC90, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.nickname", 0xDEB5, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.species", 0xDCA5, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.pokedexNumber", 0xDCA5, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.level", 0xDCA8, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.expPoints", 0xDCB3, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.statusCondition", 0xDCA9, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.hp", 0xDCA6, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.dvAttack", 0xDCC0, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.dvDefense", 0xDCC0, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.dvSpeed", 0xDCC1, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.dvSpecial", 0xDCC1, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.statExpHp", 0xDCB6, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.statExpAttack", 0xDCB8, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.statExpDefense", 0xDCBA, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.statExpSpeed", 0xDCBC, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.statExpSpecial", 0xDCBE, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.move1", 0xDCAD, [255], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.move2", 0xDCAE, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.move3", 0xDCAF, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.move4", 0xDCB0, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.move1pp", 0xDCC2, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.move2pp", 0xDCC3, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.move3pp", 0xDCC4, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.move4pp", 0xDCC5, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.type1", 0xDCAA, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.type2", 0xDCAB, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.16.trainerId", 0xDCB1, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.nickname", 0xDEC0, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.species", 0xDCC6, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.pokedexNumber", 0xDCC6, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.level", 0xDCC9, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.expPoints", 0xDCD4, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.statusCondition", 0xDCCA, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.hp", 0xDCC7, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.dvAttack", 0xDCE1, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.dvDefense", 0xDCE1, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.dvSpeed", 0xDCE2, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.dvSpecial", 0xDCE2, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.statExpHp", 0xDCD7, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.statExpAttack", 0xDCD9, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.statExpDefense", 0xDCDB, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.statExpSpeed", 0xDCDD, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.statExpSpecial", 0xDCDF, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.move1", 0xDCCE, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.move2", 0xDCCF, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.move3", 0xDCD0, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.move4", 0xDCD1, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.move1pp", 0xDCE3, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.move2pp", 0xDCE4, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.move3pp", 0xDCE5, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.move4pp", 0xDCE6, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.type1", 0xDCCB, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.type2", 0xDCCC, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.17.trainerId", 0xDCD2, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.nickname", 0xDECB, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.species", 0xDCE7, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.pokedexNumber", 0xDCE7, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.level", 0xDCEA, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.expPoints", 0xDCF5, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.statusCondition", 0xDCEB, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.hp", 0xDCE8, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.dvAttack", 0xDD02, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.dvDefense", 0xDD02, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.dvSpeed", 0xDD03, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.dvSpecial", 0xDD03, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.statExpHp", 0xDCF8, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.statExpAttack", 0xDCFA, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.statExpDefense", 0xDCFC, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.statExpSpeed", 0xDCFE, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.statExpSpecial", 0xDD00, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.move1", 0xDCEF, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.move2", 0xDCF0, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.move3", 0xDCF1, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.move4", 0xDCF2, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.move1pp", 0xDD04, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.move2pp", 0xDD05, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.move3pp", 0xDD06, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.move4pp", 0xDD07, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.type1", 0xDCEC, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.type2", 0xDCED, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.18.trainerId", 0xDCF3, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.nickname", 0xDED6, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.species", 0xDD08, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.pokedexNumber", 0xDD08, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.level", 0xDD0B, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.expPoints", 0xDD16, [0, 0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.statusCondition", 0xDD0C, [0], " ");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.hp", 0xDD09, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.dvAttack", 0xDD23, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.dvDefense", 0xDD23, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.dvSpeed", 0xDD24, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.dvSpecial", 0xDD24, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.statExpHp", 0xDD19, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.statExpAttack", 0xDD1B, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.statExpDefense", 0xDD1D, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.statExpSpeed", 0xDD1F, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.statExpSpecial", 0xDD21, [0, 0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.move1", 0xDD10, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.move2", 0xDD11, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.move3", 0xDD12, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.move4", 0xDD13, [0], null);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.move1pp", 0xDD25, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.move2pp", 0xDD26, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.move3pp", 0xDD27, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.move4pp", 0xDD28, [0], 0);
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.type1", 0xDD0D, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.type2", 0xDD0E, [0], "Normal");
            mapper.AssertAreEqual("pc.pokemonStorage.currentBox.19.trainerId", 0xDD14, [0, 0], 0);
            mapper.AssertAreEqual("pc.itemStorage.itemCount", 0xD539, [1], 1);
            mapper.AssertAreEqual("screen.text.prompt", 0xC4F2, [141], "");
            mapper.AssertAreEqual("screen.menu.currentItem", 0xCC26, [0], 0);
            mapper.AssertAreEqual("screen.tiles.column1.tile1", 0x9C0C, [0], 0);
            mapper.AssertAreEqual("screen.tiles.column1.tile2", 0x9C2C, [1], 1);
            mapper.AssertAreEqual("screen.tiles.column1.tile3", 0x9C4C, [2], 2);
            mapper.AssertAreEqual("screen.tiles.column1.tile4", 0x9C6C, [3], 3);
            mapper.AssertAreEqual("screen.tiles.column1.tile5", 0x9C8C, [4], 4);
            mapper.AssertAreEqual("screen.tiles.column1.tile6", 0x9CAC, [5], 5);
            mapper.AssertAreEqual("screen.tiles.column1.tile7", 0x9CCC, [6], 6);
            mapper.AssertAreEqual("options.textSpeed1", 0xD354, [1], false);
            mapper.AssertAreEqual("options.textSpeed2", 0xD354, [1], false);
            mapper.AssertAreEqual("options.sound1", 0xD354, [1], false);
            mapper.AssertAreEqual("options.sound2", 0xD354, [1], false);
            mapper.AssertAreEqual("options.battleStyle", 0xD354, [1], false);
            mapper.AssertAreEqual("options.battleAnimations", 0xD354, [1], false);
            mapper.AssertAreEqual("options.soloChallenge", 0xD354, [1], null);
            mapper.AssertAreEqual("settings.textSpeedMid", 0xD354, [1], false);
            mapper.AssertAreEqual("settings.textSpeedSlow", 0xD354, [1], false);
            mapper.AssertAreEqual("settings.battleAnimation", 0xD354, [1], false);
            mapper.AssertAreEqual("settings.battleStyle", 0xD354, [1], false);
            mapper.AssertAreEqual("gameTime.hours", 0xDA3F, [0, 4], 4);
            mapper.AssertAreEqual("gameTime.minutes", 0xDA41, [0, 43], 43);
            mapper.AssertAreEqual("gameTime.seconds", 0xDA43, [14], 14);
            mapper.AssertAreEqual("gameTime.frames", 0xDA44, [12], 12);
            mapper.AssertAreEqual("patch.time.frameCount", 0xDBDF, [0, 15, 151, 251], 1021947);
            mapper.AssertAreEqual("patch.time.oWFrameCount", 0xDBE3, [0, 15, 131, 138], 1016714);
            mapper.AssertAreEqual("patch.time.battleFrameCount", 0xDBE7, [0, 0, 9, 136], 2440);
            mapper.AssertAreEqual("patch.time.menuFrameCount", 0xDBEB, [0, 0, 1, 214], 470);
            mapper.AssertAreEqual("patch.time.introsFrameCount", 0xDBEF, [0, 0, 9, 19], 2323);
            mapper.AssertAreEqual("patch.saves.saveCount", 0xDC05, [0, 0], 0);
            mapper.AssertAreEqual("patch.saves.reloadCount", 0xDC07, [0, 0], 0);
            mapper.AssertAreEqual("patch.steps.stepsCount", 0xDBF3, [0, 0, 0, 72], 72);
            mapper.AssertAreEqual("patch.steps.stepsCountWalk", 0xDBF7, [0, 0, 0, 72], 72);
            mapper.AssertAreEqual("patch.steps.stepsCountBike", 0xDBFB, [0, 0, 0, 0], 0);
            mapper.AssertAreEqual("patch.steps.stepsCountSurf", 0xDBFF, [0, 0, 0, 0], 0);
            mapper.AssertAreEqual("patch.steps.bonks", 0xDC03, [0, 4], 4);
            mapper.AssertAreEqual("patch.battles.trainerBattles", 0xDC1D, [0, 1], 1);
            mapper.AssertAreEqual("patch.battles.wildBattles", 0xDC1F, [0, 1], 1);
            mapper.AssertAreEqual("patch.battles.battlesFled", 0xDC2D, [0, 0], 0);
            mapper.AssertAreEqual("patch.battles.failedRuns", 0xDC2F, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.turns.battleTurns", 0xDC21, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.turns.playerTurns", 0xDC23, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.turns.enemyTurns", 0xDC25, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.damage.totalDamageDealt", 0xDC35, [0, 0, 0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.damage.actualDamageDealt", 0xDC3D, [0, 0, 0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.damage.totalDamageTaken", 0xDC39, [0, 0, 0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.damage.actualDamageTaken", 0xDC41, [0, 0, 0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.ownMovesHit", 0xDC45, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.enemyMovesHit", 0xDC47, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.ownMovesMissed", 0xDC49, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.enemyMovesMissed", 0xDC4B, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.PlayerMovesStatus", 0xDC4D, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.EnemyMovesStatus", 0xDC4F, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.PlayerMovesSpecial", 0xDC51, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.EnemyMovesSpecial", 0xDC53, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.PlayerMoves0xE", 0xDC55, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.PlayerMoves4xR", 0xDC57, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.PlayerMoves2xR", 0xDC59, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.PlayerMoves1xE", 0xDC5B, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.PlayerMoves2xE", 0xDC5D, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.PlayerMoves4xE", 0xDC5F, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.EnemyMoves0xE", 0xDC61, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.EnemyMoves4xR", 0xDC63, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.EnemyMoves2xR", 0xDC65, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.EnemyMoves1xE", 0xDC67, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.EnemyMoves2xE", 0xDC69, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.EnemyMoves4xE", 0xDC6B, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.criticalsDealt", 0xDC6D, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.criticalsTaken", 0xDC6F, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.oHKOsDealt", 0xDC71, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.hits.oHKOsTaken", 0xDC73, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.wasConfused", 0xDC75, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.enemyBecameConfused", 0xDC77, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.wasParalyzed", 0xDC79, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.enemyWasParalyzed", 0xDC7B, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.wasBurned", 0xDC7D, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.enemyWasBurned", 0xDC7F, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.wasFrozen", 0xDC81, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.enemyWasFrozen", 0xDC83, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.wasPoisoned", 0xDC85, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.enemyWasPoisoned", 0xDC87, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.wasPoisonedBadly", 0xDC89, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.enemyWasPoisonedBadly", 0xDC8B, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.fellAsleep", 0xDC8D, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.enemyFellAsleep", 0xDC8F, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.playerTurnsConfused", 0xDC91, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.enemyTurnsConfused", 0xDC93, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.playerTurnsConfusedHitSelf", 0xDC95, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.enemyTurnsConfusedHitSelf", 0xDC97, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.playerTurnsParalyzed", 0xDC99, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.enemyTurnsParalyzed", 0xDC9B, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.playerTurnsParalyzedFully", 0xDC9D, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.enemyTurnsParalyzedFully", 0xDC9F, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.PlayerTurnsAsleep", 0xDCA1, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.status.EnemyTurnsAsleep", 0xDCA3, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.switchout", 0xDC2B, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.experienceGained", 0xDC31, [0, 0, 0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.playerPokemonFainted", 0xDCA5, [0, 0], 0);
            mapper.AssertAreEqual("patch.battle_info.enemyPokemonFainted", 0xDCA7, [0, 0], 0);
            mapper.AssertAreEqual("patch.money.moneyMade", 0xDC09, [0, 0, 0, 0], 0);
            mapper.AssertAreEqual("patch.money.moneySpent", 0xDC0D, [0, 0, 0, 0], 0);
            mapper.AssertAreEqual("patch.money.moneyLost", 0xDC11, [0, 0, 0, 0], 0);
            mapper.AssertAreEqual("patch.items.itemsPickedUp", 0xDC15, [0, 0], 0);
            mapper.AssertAreEqual("patch.items.itemsBought", 0xDC17, [0, 0], 0);
            mapper.AssertAreEqual("patch.items.itemsSold", 0xDC19, [0, 0], 0);
            mapper.AssertAreEqual("patch.catching.ballsThrown", 0xDC27, [0, 0], 0);
            mapper.AssertAreEqual("patch.catching.pokemonCaughtInBalls", 0xDC29, [0, 0], 0);
            mapper.AssertAreEqual("patch.movesLearnt", 0xDC1B, [0, 0], 0);
            mapper.AssertAreEqual("meta.generation", "1");
            mapper.AssertAreEqual("meta.gameName", "Yellow");
            mapper.AssertAreEqual("meta.gameType", "Third Version");
            mapper.AssertAreEqual("meta.mapperType", "Deprecated");
            mapper.AssertAreEqual("meta.state", "Battle");
        }

    }
}

