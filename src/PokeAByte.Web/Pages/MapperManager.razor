@page "/MapperManager"
@using PokeAByte.Web.Components.MapperManager
@using PokeAByte.Web.Components.MapperManager.ArchiveManager
@using PokeAByte.Web.Services
<PageTitle>@PageTitle - Mappers</PageTitle>
<MudText Typo="Typo.h4" GutterBottom="true">Mapper Manager</MudText>
<MudStack Row="true" Justify="Justify.FlexStart" Class="d-flex pb-2 align-center">
    <MudText Typo="Typo.body1">Mapper Status:</MudText>

    @if (MapperConnectionService!.IsCurrentlyConnected())
    {
        <MudText Typo="Typo.body1">
            @_mapperName
        </MudText>
        <MudIconButton Icon="@Icons.Material.Filled.Clear"
                       Title="Clear"
                       DisableElevation="true"
                       Variant="Variant.Outlined"
                       Color="Color.Secondary"
                       Size="Size.Small"
                       OnClick="() => { }" />
    }
</MudStack>
<MudTabs Elevation="2" 
         Rounded="false" 
         ApplyEffectsToContainer="true"
         PanelClass="pa-6"
         MinimumTabWidth="240px"
         Color="Color.Dark">
    <MudTabPanel Text="Load">
        <MudText Style="@PanelStyle">
            <LoadMapper />
        </MudText>
    </MudTabPanel>
    <MudTabPanel Text="Update">
        <MudText Style="height: auto">
            <UpdateMappers />
        </MudText>
    </MudTabPanel>
    <MudTabPanel Text="Backup">
        <MudText Style="@PanelStyle">
            <BackupArchive />
        </MudText>
    </MudTabPanel>
    <MudTabPanel Text="Restore">
        <MudText Style="@PanelStyle">
            <RestoreArchive />
        </MudText>
    </MudTabPanel>
</MudTabs>

<style>
    .mud-tabs-toolbar-content {
        display: flex;
        justify-content: center;
    }
</style>

@code {
    private const string PanelStyle = "height:55vh;";
    [CascadingParameter] public string? PageTitle { get; set; }
    [Inject] private MapperClientService? MapperConnectionService { get; set; }
    private Color _currentStatusColor = Color.Info;
    private string _currentStatusName = "Not Found";
    private string _mapperName = "";
    protected override void OnInitialized()
    {
        base.OnInitialized();
        var metaResult = MapperConnectionService!.GetMetaData();
        if (metaResult.IsSuccess)
            _mapperName = $"{metaResult.ResultValue?.GameName}";
        _currentStatusColor = MapperConnectionService?.GetCurrentConnectionColor() ?? Color.Dark;
        _currentStatusName = MapperConnectionService?.GetCurrentConnectionName() ?? "Not Found";
    }
}