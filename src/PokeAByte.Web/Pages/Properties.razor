@page "/Properties"
@using PokeAByte.Web.Components.PropertyManager
@using PokeAByte.Web.Services.Mapper
@using PokeAByte.Web.Services.Navigation
@using PokeAByte.Web.Services.Notifiers

@if (_finishedLoading)
{
    <MudStack Row="true">
        @if (string.IsNullOrEmpty(_gameName))
        {
            <MudText Typo="Typo.h6" Class="pa-2">Properties</MudText>
        }
        else
        {
            <MudText Typo="Typo.h6" Class="pa-2">Properties for @_gameName</MudText>
        }
        <MudButton Style="height:30px; align-self: center;"
                   Color="Color.Secondary"
                   Variant="Variant.Filled"
                   Size="Size.Small"
                   OnClick="OnClickUnloadMapper">
            Unload Mapper
        </MudButton>
    </MudStack>
    <PropertyTreeView />
}
else
{
    <MudText Typo="Typo.h5">
        Loading properties, please wait...
    </MudText>
}

@code {
    [Inject] private MapperClientService ClientService { get; set; }
    [Inject] private NavigationService NavService { get; set; }
    [Inject] private ChangeNotificationService ChangeNotificationService { get; set; }
    private bool _finishedLoading = false;
    private string _gameName = "";
    protected override void OnInitialized()
    {
        base.OnInitialized();
        if (!ClientService.IsCurrentlyConnected)
        {
            NavService.Navigate(NavigationService.Pages.MapperManager);
        }

        var metadata = ClientService.GetMetaData();
        if (metadata.IsSuccess)
            _gameName = metadata.ResultValue?.GameName ?? "";
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        _finishedLoading = true;
        StateHasChanged();
    }
    private async Task Clear()
    {
        await ClientService!.UnloadMapper();
        StateHasChanged();
        ChangeNotificationService.NotifyDataChanged();
    }
    private async Task OnClickUnloadMapper()
    {
        await Clear();
    }
}
