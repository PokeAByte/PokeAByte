@using PokeAByte.Domain.Models.Properties
@implements IDisposable
<MudExpansionPanels Dense="true">
    <MudExpansionPanel Dense="true">
        <TitleContent>
            <MudTooltip Text="Is the variable schema updated? Is the correct mapper loaded? Is the property within the mapper correct?"
                        Placement="Placement.Right">
                <MudStack Row="true">
                <MudText Typo="Typo.body1"
                         Color="Color.Error">
                    @($"{Context.Count} Property Errors")
                </MudText>
                <MudIcon Icon="@Icons.Material.Filled.Info"
                         Size="Size.Medium"
                         Color="Color.Error"
                         Class="pt-1 pb-1 ml-n2"/>
                </MudStack>
            </MudTooltip>
        </TitleContent>
        <ChildContent>
            <MudSimpleTable Style="overflow-x: auto;"
                            Class="prop-error-table py-4 px-4">
                <thead>
                <tr>
                    <th style="width:55%">Property Path</th>
                    <th style="width:30%">Address</th>
                    <th style="width:15%">Type</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var row in Context)
                {
                    <tr>
                        <td>@row.Path</td>
                        <td>@row.OriginalAddressString</td>
                        <td>@row.Type</td>
                    </tr>
                }
                </tbody>
            </MudSimpleTable>
        </ChildContent>
    </MudExpansionPanel>
</MudExpansionPanels>

<style>
    .prop-error-table table * tr > td {
        padding: 2px 8px 2px 8px !important;
    }
    .prop-error-table table * tr th {
        padding: 2px 8px 2px 8px !important;  
    }
</style>

@code {
    [Parameter] public required List<PropertyModel> Context { get; set; }
    [Inject] public ISnackbar Snackbar { get; set; }
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            if (Context.Count > 0)
            {
                Snackbar.Add($"Warning: There are {Context.Count} property errors! Please check the 'Property Errors' expansion panel for more details.",
                    Severity.Error);
            }
        }
        base.OnAfterRender(firstRender);
    }

    public void Dispose()
    {
        Snackbar.Dispose();
    }

}