@using PokeAByte.Web.Models
<MudGrid Spacing="0" Justify="Justify.FlexStart">
    @for (var i = 0; i < Context.ByteArray.EditableArray.Count; ++i)
    {
    var index = i;
    <MudItem xs="2" md="2" sm="2">
        <div class="d-flex flex-grow-1 gap-2">
            <MudTextField @bind-Value="@Context.ByteArray.EditableArray[index]"
                          MaxLength="2"
                          Class="align-center justify-center mt-n1"
                          Style="height: 25px"
                          Margin="Margin.Dense"
                          Immediate="true"
                          OnKeyDown="ArrayOnKeyDownHandler"
                          TextChanged="OnTextChangedHandler"
                          ShrinkLabel="true"
                          ReadOnly="@(Context.Type is "string" || Context.IsReadOnly)"/>
        </div>
    </MudItem>
    }    
</MudGrid>

@code {
    [Parameter] public required EditPropertyModel Context { get; set; }
    [Parameter] public required PropertyValueEditor PropertyValueEditor { get; set; }

    private async Task ArrayOnKeyDownHandler(KeyboardEventArgs key)
    {
        if (key.Code is "Enter" or "NumpadEnter")
        {
            await PropertyValueEditor.Save();
        }
    }
    private void OnTextChangedHandler(string text)
    {
        if (Context.Type is "string") return;
        Context.UpdateFromByteArray();
        StateHasChanged();
    }
}