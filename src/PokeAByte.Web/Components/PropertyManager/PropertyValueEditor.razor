@using PokeAByte.Web.Models
<MudStack Row="true" Style="cursor: default !important;">
    @if (EditContext.Type is "string")
    {
        <MudTextField @bind-Value="EditContext.ValueString"
                      Variant="Variant.Text"
                      Margin="Margin.Dense"
                      OnBlur="InputFocusLostHandler"
                      ShrinkLabel="true"
                      Class="pad-input"
                      ReadOnly="EditContext.IsReadOnly"
                      Disabled="EditContext.IsReadOnly"
                      Immediate="true"
                      AutoGrow="false"
                      MaxLength="@(EditContext.Length ?? 30)"
                      TextChanged="OnTextChangedHandler"
                      OnKeyDown="OnKeyDownHandler"/>
    }
    else if (EditContext.Type is "string" && !string.IsNullOrEmpty(EditContext.Reference))
    {
        <MudAutocomplete SearchFunc="SearchForReference"
                         Dense="true"
                         Margin="Margin.Dense"
                         Class="mt-n1 pab-text"
                         Style="height: 25px;"
                         Adornment="Adornment.None"
                         OnBlur="InputFocusLostHandler"
                         ShrinkLabel="true"
                         MaxItems="15"
                         ValueChanged="OnValueChanged"
                         OnKeyDown="(key) => OnKeyDownAutoCompleteHandler(key, EditContext)"
                         OnInternalInputChanged="OnInputChanged">
            <BeforeItemsTemplate>
                <MudText Typo="Typo.body2" Class="px-2">Type to Search Entries...</MudText>
            </BeforeItemsTemplate>
        </MudAutocomplete>
    }
    else if (EditContext.Type is "int" or "uint" or "nibble" && string.IsNullOrEmpty(EditContext.Reference))
    {
        <MudTextField @bind-Value="EditContext.ValueString"
                      Variant="Variant.Text"
                      Style="height: 25px"
                      Class="pab-int"
                      Margin="Margin.Dense"
                      OnBlur="InputFocusLostHandler"
                      ShrinkLabel="true"
                      Immediate="true"
                      TextChanged="OnTextChangedHandler"
                      OnKeyDown="OnKeyDownHandler"/>
    }
    else if (EditContext.Type is "int" or "uint" or "nibble" && !string.IsNullOrEmpty(EditContext.Reference))
    {
        <MudAutocomplete SearchFunc="SearchForIntReference"
                         T="IntegerValueReference?"
                         Dense="true"
                         Margin="Margin.Dense"
                         Class="mt-n1 pab-text"
                         Style="height: 25px;"
                         Adornment="Adornment.None"
                         OnBlur="InputFocusLostHandler"
                         ShrinkLabel="true"
                         MaxItems="15"
                         Value="_autocompleteIntValue"
                         ValueChanged="OnIntValueChanged"
                         OnKeyDown="(key) => OnKeyDownIntAutoCompleteHandler(key, EditContext)"
                         OnInternalInputChanged="OnInputChanged"
                         ToStringFunc="@(e => e is not null && string.IsNullOrEmpty(e.value) ? "" : e?.value ?? "")">
            <BeforeItemsTemplate>
                <MudText Typo="Typo.body2" Class="px-2">Type to Search Entries...</MudText>
            </BeforeItemsTemplate>
        </MudAutocomplete>
    }
    else if (EditContext.Type is "bit" or "bool")
    {

        <MudSwitch @bind-Value="EditContext.ValueString"
                   Color="Color.Success"
                   Size="Size.Small"
                   Converter="MudSwitchConverter"
                   UnCheckedColor="@Color.Secondary"/>
    }
    else
    {
        <MudText Class="pab-text">
            @FormatString(EditContext.ValueString)
        </MudText>
    }
    <MudIconButton Icon="@Icons.Material.Filled.Save"
                   id="saveButtonIcon"
                   Title="Save"
                   Style="padding-top: 5px;"
                   Disabled="!EditContext.IsEditing"
                   OnClick="SaveBtnOnClickHandler"/>
    <MudIconButton Icon="@FreezeIcon"
                   Title="Freeze"
                   Style="padding-top: 5px;"
                   OnClick="OnClickFreezeHandler"/>
    @*<MudIconButton Icon="@Icons.Material.Filled.PushPin"
                   Title="Pin"/>*@
</MudStack>
<style>
    span.mud-switch-base {
        padding: 5px !important;
    }
    .pab-int input {
        padding: 6px 0 0 !important;
    }
    .pab-int {
        margin: 1px 0 0 !important;
    }
    .pab-text {
        margin: 4px 0 0 !important;
    }    
    .pab-text input {
         padding: 3px 0 0 !important;
     }
    .pad-input input {
        padding: 4px 0 0 !important;        
    }
</style>