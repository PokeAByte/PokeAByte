@using PokeAByte.Web.Models
@implements IDisposable
<MudPaper Width="100%"
          Class="d-flex align-center rounded ml-n4 px-2"
          Elevation="0"
          Style="cursor: pointer; background-color:var(--mud-palette-surface);overflow-y: hidden">
    <MudStack Class="flex-grow-1">
        <MudGrid>
            <MudItem Class="align-content-center">
                <MudText Typo="Typo.body2" Style="@Width" Class="d-flex justify-start" id="mudText">
                    @Context.Value!.Name:
                </MudText>
            </MudItem>
            <MudItem Class="align-center cursor-default">
                <PropertyValueEditor Context="Context.Value?.PropertyModel" IsShortDisplay="true"/>
            </MudItem>
        </MudGrid>
    </MudStack>
</MudPaper>

@code {
    [Parameter] public required PropertyTreePresenter Context { get; set; }
    [Parameter] public required PropertyTreeView Parent { get; set; }
    private int _textWidth = 125;
    private string Width => $"width:{_textWidth}px;";
    protected override void OnInitialized()
    {
        base.OnInitialized();
        if (Context.Parent is not null)
        {
            _textWidth = Context.Parent.GetMaxLength() * 10;
        }
        else
        {
            _textWidth = string.IsNullOrEmpty(Context.Text) ? 125 : Context.Text.Length * 10;
        }
        Parent.DetachRefreshEvent(RefreshSelf);
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            Parent.AttachRefreshEvent(RefreshSelf);
        }
        base.OnAfterRender(firstRender);
    }

    private void RefreshSelf()
    {
        StateHasChanged();
    }
    public void Dispose()
    {
        Parent.DetachRefreshEvent(RefreshSelf);
    }
    
}