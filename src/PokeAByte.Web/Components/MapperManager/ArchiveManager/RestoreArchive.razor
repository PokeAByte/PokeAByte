@if (_isDataLoading)
{
    <MudSkeleton SkeletonType="SkeletonType.Rectangle" Height="500px"/>
    <MudOverlay Visible="_isDataLoading" DarkBackground="true" Absolute="true">
        <MudProgressCircular Color="Color.Secondary" Indeterminate="true"/>
    </MudOverlay>
}
else
{
    <MudText Typo="Typo.h6" Class="py-6">
        @_archivedMappers.Count folders and
        @_archivedMappers.SelectMany(y => y.MapperModels).Count() files found
    </MudText>
    <MudStack Row="true" Class="pb-2">
        <MudButton Color="Color.Primary"
                   Variant="Variant.Filled"
                   OnClick="OnClickOpenMapperDirectory">
            Open Mapper Directory
        </MudButton>
        <MudButton Color="Color.Primary"
                   Variant="Variant.Filled"
                   OnClick="OnClickOpenArchiveDirectory">
            Open Backup/Archive Directory
        </MudButton>
    </MudStack>
    <MudStack Row="true">
        <MudTextField @bind-Value="_mapperListFilter"
                      Class="py-4"
                      Label="Filter Updates"
                      Immediate="true"
                      Variant="Variant.Filled"/>
        <MudButton Color="Color.Info"
                   Variant="Variant.Filled"
                   OnClick="OnClickReloadMapperList"
                   Style="height:40px; align-self: center;">
            Reload Mapper List
        </MudButton>
    </MudStack>
    @if (ArchivedMapperListFiltered.Count == 0)
    {
        <MudText Typo="Typo.h6" Class="pb-3">No Archives/Backups Found</MudText>
    }
    else if(ArchivedMapperListFiltered.Count > 0 && !string.IsNullOrEmpty(_mapperListFilter))
    {
        <MudText Typo="Typo.h6" Class="pb-3">
            @ArchivedMapperListFiltered.Count / @_archivedMappers.Count Filtered
        </MudText>
    }
    @foreach (var item in ArchivedMapperListFiltered)
    {
        <MudPaper Class="pa-1 mb-2" Elevation="4">
            <MudGrid Spacing="1" Justify="Justify.FlexStart">
                <MudItem Class="align-start">
                    <MudIconButton Icon="@Icons.Material.Filled.CatchingPokemon"
                                   Color="@SetIconColor(item.IsExpanded)"
                                   aria-label="expand-panel"
                                   Class="ml-auto mud-width-full d-flex"
                                   OnClick="() => item.IsExpanded = !item.IsExpanded"/>
                </MudItem>
                <MudItem Class="align-content-center"  Style="width:325px;">
                    <MudText Typo="Typo.body1" Class="d-flex justify-start">
                        @item.BasePath (@item.MapperModels.Count files)
                    </MudText>
                </MudItem>
                <MudItem Class="align-content-center align-center">
                    <MudButton Color="Color.Success"
                               OnClick="() => OnClickRestoreButton(item)"
                               Class="ml-auto mud-width-full d-flex"
                               Variant="Variant.Filled">
                        Restore
                    </MudButton>
                </MudItem>
                <MudItem Class="align-content-center align-center">
                    <MudButton Color="Color.Error"
                               OnClick="() => OnClickDeleteButton(item)"
                               Class="ml-auto mud-width-full d-flex"
                               Variant="Variant.Filled">
                        Delete
                    </MudButton>
                </MudItem>
            </MudGrid>
            <div style="@(item.IsExpanded ? "display:block;" : "display:none;")">
                <MudDivider Vertical="false"
                            Light="false"
                            DividerType="DividerType.FullWidth"
                            Class="mb-3"/>
                <MapperArchiveData Context="@item.MapperModels"/>
            </div>
        </MudPaper>
    }
}